@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.Navigation.NavigationTreeViewModel>
@using Dynamicweb
@using Dynamicweb.Ecommerce.Orders
@using System.IO

<nav class="nav flex-nowrap offcanvas-utility-navigation pe-2" aria-label="@Translate("Utility navigation")">
	@foreach (var node in Model.Nodes)
	{
		var nodePage = Dynamicweb.Content.Services.Pages.GetPage(node.PageId);
		string pageType = nodePage.ItemType;
		string icon = string.Empty;
		if (nodePage.PropertyItem is object)
		{
			if(nodePage.PropertyItem.TryGetValue("Icon", out object pageIconValue))
			{
				icon = Dynamicweb.Core.Converter.ToString(pageIconValue);
			}
		}
		var inPathClass = node.InPath ? "in-path" : string.Empty;
		var activeClass = node.IsActive ? "active fw-bold" : string.Empty;

		<div class="nav-item@(node.IsActive ? " active" : string.Empty)">
			@if (node.IsClickable)
			{
				@:<a class="nav-link p-2 @(activeClass)" href="@node.Link">
			}
			else
			{
				@:<span class="nav-link p-2">
			}

			@if (pageType == "Swift-v2_Cart")
			{
				string? cartId = string.Empty;
				string? jsCartClass = "js-cart-qty";
				double totalProducts = 0;
				Dynamicweb.Ecommerce.Common.Context.CartContext = null;

				if(nodePage.PropertyItem is object && nodePage.PropertyItem.TryGetValue("ContextCart", out object cartContextValue))
				{
					cartId = cartContextValue?.ToString();
					jsCartClass = string.Empty;
					Dynamicweb.Ecommerce.Common.Context.CartContext = Dynamicweb.Ecommerce.Services.OrderContexts.GetOrderContextById(cartId);
				}					

				if (Dynamicweb.Ecommerce.Common.Context.Cart != null)
				{
					totalProducts = Dynamicweb.Ecommerce.Common.Context.Cart.GetParentProductLineQuantityCount(Dynamicweb.Ecommerce.Common.Context.Cart.OrderLines);
				}

				if (icon.EndsWith(".svg", StringComparison.OrdinalIgnoreCase))
				{
					<span class="icon-3 pe-none">@ReadFile(icon)</span>
					<span class="@jsCartClass mini-cart-quantity pe-none" id="@cartId" data-order-context="@cartId">@totalProducts</span>
				}
			}
			else
			{
				if (icon.EndsWith(".svg", StringComparison.OrdinalIgnoreCase))
				{
					<span class="icon-3 pe-none">@ReadFile(icon)</span>
				}
			}

			@if (node.IsClickable)
			{
				@:</a>
			}
			else
			{
				@:</span>
			}
		</div>
	}
</nav>
