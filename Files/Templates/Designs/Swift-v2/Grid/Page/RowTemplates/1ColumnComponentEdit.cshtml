@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>
@{ 
	string pushDown = "";
	string columnPosition = Model.Item.GetRawValueString("ColumnPosition", "align-items-center").ToLower();
	if (columnPosition == "bottom")
	{
		pushDown = " mt-auto";
	}

	string spaceBetweenRows = Model.Item.GetRawValueString("SpaceBetweenRows", "spacing");
	string sectionClass = string.Empty;

	//Row spacing dekstop
	switch (spaceBetweenRows) {
		case "none": //No spacing
			sectionClass += "py-0";
			break;
		case "spacing": //Small spacing top and bottom
			sectionClass += "py-2";
			break;
		case "spacing-small-top": //Small spacing top
			sectionClass += "pt-2";
			break;
		case "spacing-small-bottom": //Small spacing bottom
			sectionClass += "pb-2";
			break;
		case "spacing-medium": //Medium spacing top and bottom
			sectionClass += "py-3";
			break;
		case "spacing-medium-top": //Medium spacing top
			sectionClass += "pt-3";
			break;
		case "spacing-medium-bottom": //Medium spacing bottom
			sectionClass += "pb-3";
			break;
		case "spacing-large": //Large spacing top and bottom
			sectionClass += "py-4";
			break;
		case "spacing-top": //Large spacing top
			sectionClass += "pt-4";
			break;
		case "spacing-bottom": //Large spacing bottom
			sectionClass += "pb-4";
			break;
	}

	string columnOne = Model.Column(1).Output().Trim();

	if (Pageview.IsVisualEditorMode || !string.IsNullOrWhiteSpace(columnOne))
	{
		<div class="@(pushDown) item_@Model.Item.SystemName.ToLower()">
			<div class="@sectionClass" data-col-size="12">
				@columnOne
			</div>
		</div>
	}
}
