@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>
@{ 
	string containerClass = "container-xl";

	string width = Model.Item.GetRawValueString("Width", "");
	if (width == "stretch") {
		containerClass = "container-fluid";
	}
	if (width == "none") {
		containerClass = "container-fluid px-0";
	}

	string rowHeight = Model.Item.GetRawValueString("RowHeight", "0");
	rowHeight = "py-" + rowHeight;

	string hideOnScroll = Model.Item.GetRawValueString("HideOnScroll", string.Empty).ToLower();
	hideOnScroll = hideOnScroll == "hide" ? "js-hide-on-scroll" : "";

	string headerCssClass = "sticky-top";
	if (Pageview.Page.PropertyItem is Dynamicweb.Content.Items.Item propertyItem ) {
		headerCssClass = propertyItem["MoveThisPageBehindTheHeader"] != null ? propertyItem["MoveThisPageBehindTheHeader"].ToString() : "sticky-top";
	}
	headerCssClass = headerCssClass == "" ? "sticky-top" : headerCssClass;
	headerCssClass = Pageview.IsVisualEditorMode ? "" : headerCssClass;

	var columnContent = Model.Column(1).Output();

	if (Pageview.IsVisualEditorMode || !string.IsNullOrWhiteSpace(columnContent))
	{
	<div class="@rowHeight @hideOnScroll item_@Model.Item.SystemName.ToLower()" data-swift-gridrow>
		<div class="@containerClass">
			<div class="d-flex flex-row">
				<div class="col">
					@columnContent
				</div>
			</div>
		</div>
	</div>
	}
}
