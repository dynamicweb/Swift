@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>

@{ 
	string containerClass = "container-xl";

	string width = Model.Item.GetRawValueString("Width", "").ToLower();
	if (width == "stretch")
	{
		containerClass = "container-fluid";
	}
	if (width == "none")
	{
		containerClass = "container-fluid px-0";
	}

	string rowClass = "gap-3";
	string spaceBetweenColumns = Model.Item.GetRawValueString("SpaceBetweenColumns", "").ToLower();

	if (spaceBetweenColumns == "stick")
	{
		rowClass = "gap-0";
	}
	if (spaceBetweenColumns == "spacing-large")
	{
		rowClass = "gap-1 gap-md-4 gap-lg-5";
	}

	string columnPosition = Model.Item.GetRawValueString("ColumnPosition", "align-items-center").ToLower();
	if (columnPosition == "top")
	{
		columnPosition = "align-items-start";
	}
	if (columnPosition == "center")
	{
		columnPosition = "align-items-center";
	}
	if (columnPosition == "bottom")
	{
		columnPosition = "align-items-end";
	}

	string rowHeight = Model.Item.GetRawValueString("RowHeight", "0").ToLower();
	rowHeight = "py-" + rowHeight;

	string column1width = Model.Item.GetRawValueString("Column_1Width", "").ToLower();
	column1width = column1width == "grow" ? "flex-grow-1" : "flex-grow-0";

	string column2width = Model.Item.GetRawValueString("Column_2Width", "").ToLower();
	column2width = column2width == "grow" ? "flex-grow-1" : "flex-grow-0";

	string column3width = Model.Item.GetRawValueString("Column_3Width", "").ToLower();
	column3width = column3width == "grow" ? "flex-grow-1" : "flex-grow-0";

	string hideOnScroll = Model.Item.GetRawValueString("HideOnScroll", "").ToLower();
	hideOnScroll = hideOnScroll == "hide" ? "js-hide-on-scroll" : "";

	string headerCssClass = "sticky-top";
	if (Pageview.Page.PropertyItem != null) {
		headerCssClass = Pageview.Page.PropertyItem["MoveThisPageBehindTheHeader"] != null ? Pageview.Page.PropertyItem["MoveThisPageBehindTheHeader"].ToString() : "sticky-top";
	}
	headerCssClass = headerCssClass == "" ? "sticky-top" : headerCssClass;
	headerCssClass = Pageview.IsVisualEditorMode ? "" : headerCssClass;

	var columnContent1 = Model.Column(1).Output();
	var columnContent2 = Model.Column(2).Output();
	var columnContent3 = Model.Column(3).Output();

	if (Pageview.IsVisualEditorMode || !string.IsNullOrWhiteSpace(columnContent1) || !string.IsNullOrWhiteSpace(columnContent2) || !string.IsNullOrWhiteSpace(columnContent3))
	{
		<div class="@rowHeight @hideOnScroll item_@Model.Item.SystemName.ToLower()" data-swift-gridrow>
			<div class="@containerClass">
				<div class="d-flex flex-row @rowClass @columnPosition">
					<div class="col @column1width">
						@columnContent1
					</div>
					<div class="col @column2width">
						@columnContent2
					</div>
					<div class="col @column3width">
						@columnContent3
					</div>
				</div>
			</div>
		</div>
	}
}
