@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend

<div class="d-grid flex-fill position-relative justify-content-center align-items-center text-center" style="min-height: @(Model.Item.GetString("Height"))vh">
	@if (Model.Item.TryGetImageFile("Image", out ImageFileViewModel image)) {
		<figure class="position-absolute top-0 bottom-0 end-0 start-0 m-0 pe-none ratio">
			<img class="object-fit-cover" src="@image.Path" style="object-position: @image.GetFocalPointPercentage()" />
		</figure>
		<div class="position-absolute m-0 pe-none" style="inset:0;opacity:0.6;background-image:radial-gradient(circle at center,@Model?.ColorScheme?.ForegroundColor?.Contrast(100), 25%, transparent);"></div>
	}

	<div class="container-xl px-0 d-grid position-relative mb-0-last-child">
		@if (Model.Item.TryGetString("Eyebrow", out string eyebrow)) {
			@eyebrow
		}
		
		@if (Model.Item.TryGetString("Title", out string title)) {
			<h1>@title</h1>
		}

		@if (Model.Item.TryGetString("Text", out string text)) {
			@text
		}

		<div class="hstack gap-2 mx-auto">
			@if (Model.Item.TryGetButton("ButtonPrimary", out ButtonViewModel buttonPrimary)) {
				<a href="@buttonPrimary.Link.Url" class="btn btn-primary">@buttonPrimary.Label</a>
			}

			@if (Model.Item.TryGetButton("ButtonSecondary", out ButtonViewModel buttonSecondary)) {
				<a href="@buttonSecondary.Link.Url" class="btn btn-outline-secondary">@buttonSecondary.Label</a>
    		}
		</div>
	</div>
</div>
