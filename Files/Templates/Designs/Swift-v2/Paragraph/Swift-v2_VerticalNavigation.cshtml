@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend.Navigation

@{
	var navigationSettings = new NavigationSettings();
	navigationSettings.ExpandMode = ExpandMode.All;
	navigationSettings.Parameters.Add("Layout", Model.Item.GetString("Layout"));
	navigationSettings.Parameters.Add("HideTexts", Model.Item.GetBoolean("HideTexts"));
	navigationSettings.Parameters.Add("HideIcons", Model.Item.GetBoolean("HideIcons"));
	navigationSettings.Parameters.Add("ShowSignOutLink", Model.Item.GetBoolean("ShowSignOutLink"));

	if (!string.IsNullOrEmpty(Model.Item.GetString("NavigationRoot"))) {
		string root = Model.Item.GetString("NavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			navigationSettings.RootPageId = rootPageId;
			
			var page = Dynamicweb.Content.Services.Pages.GetPage(rootPageId);
			if (page != null && !string.IsNullOrEmpty(page.NavigationTag))
			{
				navigationSettings.Parameters.Add("menu-id", page.NavigationTag.ToLower());
			}
		}
		navigationSettings.StartLevel = 2;
	} else {
		navigationSettings.StartLevel = 1;
		navigationSettings.Parameters.Add("menu-id", "root");
	}
}

<div class="h-100 item_@Model.Item.SystemName.ToLower()" data-dw-colorscheme="@Model.ColorScheme?.Id">
	@if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h3>@Model.Item.GetString("Title")</h3>
	}

	@Navigation.RenderNavigation("Navigation/Vertical.cshtml", navigationSettings)
</div>
