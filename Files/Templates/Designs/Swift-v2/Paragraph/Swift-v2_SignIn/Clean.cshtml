@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend.Navigation
@using Dynamicweb.Content

@{
	int rootPageId = GetPageIdByNavigationTag("SignInPage") != 0 ? GetPageIdByNavigationTag("SignInPage") : Pageview.ID;
	if (Model.Item.TryGetLink("SignInPage", out var signInPage))
	{
		rootPageId = signInPage.PageId;
	}

	NavigationTreeViewModel navigationModel = null;
	navigationModel = Navigation.GetNavigationViewModel(new NavigationSettings()
	{
		RootPageId = rootPageId,
		ExpandMode = ExpandMode.All
	});
}

@if (Pageview.User == null || Pageview.IsVisualEditorMode)
{
	<div class="nav-wrapper" data-swift-menu="@Model.ID">
		<div class="nav-item dropdown position-static">
			<span class="p-2 nav-link d-inline-flex align-items-center gap-2 text-nowrap" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="SignInDropdown_@Model.ID">
				@if (Model.Item.TryGetString("Icon", out var icon) && icon.Contains(".svg"))
				{
					<span class="icon-3 pe-none">@ReadFile(icon)</span>
				}
				@if (Model.Item.TryGetString("Title", out string title) )
				{
					<span>@title</span>
				}
			</span>
			<ul class="dropdown-menu" aria-labelledby="SignInDropdown_@Model.ID" data-dw-colorscheme="@Model.ColorScheme?.Id">			
				@foreach (var node in navigationModel?.Nodes)
				{
					<li>
						<a class="dropdown-item py-2 text-decoration-underline-hover" href="@node.Link">@node.Name</a>
					</li>

				}
			</ul>
		</div>
	</div>
}
