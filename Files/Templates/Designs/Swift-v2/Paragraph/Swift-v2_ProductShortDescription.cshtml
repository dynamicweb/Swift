@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog

@{
	ProductViewModel product = null;
	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	}
	else if (!string.IsNullOrEmpty(Pageview.Page.Item["DummyProduct"]?.ToString()) && Pageview.IsVisualEditorMode)
	{
		var pageViewModel = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Pageview.Page);
		ProductListViewModel productList = pageViewModel.Item.GetValue("DummyProduct") != null ? pageViewModel.Item.GetValue("DummyProduct") as ProductListViewModel : new ProductListViewModel();

		if (productList?.Products is object)
		{
			product = productList.Products[0];
		}

		if (string.IsNullOrEmpty(product.ShortDescription) && Pageview.IsVisualEditorMode)
		{
			product.ShortDescription = Translate("Find the perfect product for a greener lifestyle");
		}
	} else if (Pageview.IsVisualEditorMode) {
		product = new ProductViewModel();
		product.ShortDescription = Translate("Find the perfect product for a greener lifestyle");
	}
}

@if (product is object)
{
	<div class="mb-0-last-child item_@Model.Item.SystemName.ToLower()" itemprop="disambiguatingDescription">@product.ShortDescription</div>
}
