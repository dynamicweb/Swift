@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend.Navigation
@using System.Text.RegularExpressions

@{
    string groupId = Dynamicweb.Context.Current?.Request["GroupID"]?.ToString() ?? string.Empty;
    string productId = Dynamicweb.Context.Current?.Request["ProductID"]?.ToString() ?? string.Empty;
    string variantId = Dynamicweb.Context.Current?.Request["VariantID"]?.ToString() ?? string.Empty;

    var ecomCountries = Dynamicweb.Ecommerce.Services.Countries.GetCountries();
    var currencies = Dynamicweb.Ecommerce.Services.Currencies.GetAllCurrencies();
    var languages = new List<Dynamicweb.Content.Page>();

    string title = Translate("Preferences");
    if (Model.Item.TryGetString("Title", out string customTitle))
    {
        title = customTitle;
    }

    if (Model.Item.GetBoolean("LanguageSelector") == true)
    {
        if (Pageview.Page.Area.IsMaster)
        {
            languages.Add(Pageview.Page);
            if (Pageview.Page.Languages != null)
            {
                foreach (var language in Pageview.Page.Languages)
                {
                    if (language.Area.Active == true)
                    {
                        languages.Add(language);
                    }
                }
            }
        }
        else
        {
            if (Pageview.Page.MasterPage != null)
            {
                languages.Add(Pageview.Page.MasterPage);
                if (Pageview.Page.MasterPage.Languages != null)
                {
                    foreach (var language in Pageview.Page.MasterPage.Languages)
                    {
                        if (language.Area.Active == true)
                        {
                            languages.Add(language);
                        }
                    }
                }
            }
        }
    }
}

<div class="nav-item dropdown">
	<span class="p-2 nav-link d-inline-flex align-items-center gap-2 text-nowrap" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="PreferencesDropdown_@Model.ID">
		@*
        @if (!string.IsNullOrEmpty(pageIcon) && pageIcon.EndsWith(".svg", StringComparison.OrdinalIgnoreCase))
		{
			<span class="icon-3 pe-none">@ReadFile(pageIcon)</span>
		}
        *@
		@if (!Model.Item.GetBoolean("HideTitle"))
		{
			<span>@title</span>
		}
	</span>
	<ul class="dropdown-menu" aria-labelledby="PreferencesDropdown_@Model.ID" data-dw-colorscheme="@Model.ColorScheme?.Id">
        @if (Model.Item.GetBoolean("LanguageSelector") == true && languages.Count > 1)
        {
            string iconFolder = "/Files/FlagIcons/";
            string pageIcon = iconFolder + Pageview.Area.CultureInfo.Name.ToLower() + ".svg";

            Regex reg = new Regex(@"\(([^\)]+)\)");
            string name = reg.Replace(Pageview.Area.CultureInfo.DisplayName, "");

            string linkElementId = $"languageSelector_{Pageview.CurrentParagraph.ID}_{Model.ID}";

            <li class="nav-item dropdown">
                <form class="d-none d-lg-block" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="languageDropdown_@Model.ID" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Type" value="language">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">

                    <a id="@linkElementId" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap text-decoration-underline-hover dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @if (pageIcon.EndsWith(".svg", StringComparison.OrdinalIgnoreCase))
                        {
                            <span class="icon-3">@ReadFile(pageIcon)</span>
                        }
                        <span>@name</span>
                    </a>

                    <ul class="dropdown-menu" id="languageDropdown_@Model.ID" data-dw-colorscheme="@Model.ColorScheme.Id"></ul>
                </form>

                <form class="d-block d-lg-none" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="PreferencesModalContent" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Layout" value="modal">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">
                    <button type="button" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="btn nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap border-0 swift_open-preferences-modal" data-bs-toggle="modal" data-bs-target="#PreferencesModal">
                        @if (pageIcon.EndsWith(".svg", StringComparison.OrdinalIgnoreCase))
                        {
                            <span class="icon-3">@ReadFile(pageIcon)</span>
                        }
                        <span>@name</span>
                    </button>
                </form>
            </li>
        }

        @if (Model.Item.GetBoolean("CountrySelector") == true && ecomCountries.Count > 1)
        {
            string name = Translate("Deliver to") + ": " + Dynamicweb.Ecommerce.Common.Context.Country?.GetName(Dynamicweb.Ecommerce.Common.Context.LanguageID);
            string linkElementId = $"countrySelector_{Pageview.CurrentParagraph.ID}_{Model.ID}";

            <li class="nav-item dropdown">
                <form class="d-none d-lg-block" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="countryDropdown_@Model.ID" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Type" value="country">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">

                    <a id="@linkElementId" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap text-decoration-underline-hover dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span>@name</span>
                    </a>

                    <ul class="dropdown-menu" id="countryDropdown_@Model.ID" data-dw-colorscheme="@Model.ColorScheme.Id"></ul>
                </form>

                <form class="d-block d-lg-none" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="PreferencesModalContent" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Layout" value="modal">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">
                    <button type="button" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="btn nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap border-0 swift_open-preferences-modal" data-bs-toggle="modal" data-bs-target="#PreferencesModal">
                        <span>@name</span>
                    </button>
                </form>
            </li>
        }

        @if (Model.Item.GetBoolean("CurrencySelector") == true && currencies.Count() > 1)
        {
            string name = Dynamicweb.Ecommerce.Common.Context.Currency?.Code;
            string linkElementId = $"currencySelector_{Pageview.CurrentParagraph.ID}_{Model.ID}";

            <li class="nav-item dropdown">
                <form class="d-none d-lg-block" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="currencyDropdown_@Model.ID" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Type" value="currency">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">

                    <a id="@linkElementId" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap text-decoration-underline-hover dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span>@name</span>
                    </a>

                    <ul class="dropdown-menu" id="currencyDropdown_@Model.ID" data-dw-colorscheme="@Model.ColorScheme.Id"></ul>
                </form>

                <form class="d-block d-lg-none" action="/Default.aspx?ID=@Pageview.Page.ID" data-response-target-element="PreferencesModalContent" data-layout-template="Swift-v2_Preferences.cshtml" data-preloader="inline">
                    <input type="hidden" name="Layout" value="modal">
                    <input type="hidden" name="CurrentPageID" value="@Pageview.ID">
                    <input type="hidden" name="GroupID" value="@groupId">
                    <input type="hidden" name="ProductID" value="@productId">
                    <input type="hidden" name="VariantID" value="@variantId">
                    <button type="button" onmouseover="swift.PageUpdater.Update(event)" onclick="swift.PageUpdater.Update(event)" class="btn nav-link d-inline-flex align-items-center gap-2 p-2 text-nowrap border-0 swift_open-preferences-modal" data-bs-toggle="modal" data-bs-target="#PreferencesModal">
                        <span>@name</span>
                    </button>
                </form>
            </li>
        }
    </ul>
</div>