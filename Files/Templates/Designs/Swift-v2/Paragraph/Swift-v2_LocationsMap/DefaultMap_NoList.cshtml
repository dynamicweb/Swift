@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>

@if (Model.Item.TryGetGeolocation("DefaultMapCenter", out var defaultMapCenter)) {
	if (Pageview.AreaSettings.TryGetString("Google_APIKey", out string apiKey)) {
		var locationList = Model.Item.GetUsers("UserGroup");
		string jsonLocationList = System.Net.WebUtility.HtmlEncode(
			System.Text.Json.JsonSerializer.Serialize(locationList)
		);

		string regionCode = "DK";
		if (Model.Item.TryGetString("RegionCode", out string region))
		{
			regionCode = region;
		}

		<swift-locations-map
			class="grid position-relative"
			api-key="@apiKey"
			locations="@jsonLocationList"
			default-lat="@defaultMapCenter.Latitude"
			default-lng="@defaultMapCenter.Longitude"
			initial-zoom-level="@Model.Item.GetInt32("InitialZoomLevel")"
			region-code="@regionCode"
			map-style='@ReadFile(Model?.Item?.GetString("MapStyle"))'
			no-locations-found-label="@Translate("No options available in the selected area")"
			map-icon-url="/Files/Images/Icons/location-pin-solid-full.svg">

			@if (Model.Item.TryGetString("Title", out string title))
			{
				<div class="g-col-12 g-col-lg-8 h-100">
					@title
				</div>
			}

			<div class="g-col-12 g-col-lg-4 position-relative">
				<form class="flex-fill" data-swift-searchbar>
					<div class="input-group">
						<span class="input-group-text border-end-0 bg-body">
							<span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
							<span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
						</span>
						<input type="text" class="form-control border-start-0" name="FilterText" placeholder="@Translate("Enter city, state or zip")">
					</div>
				</form>
			</div>

			<div class="g-col-12">
				<div class="map" data-swift-locations-map></div>
			</div>

			@if (locationList.Count() > 1) {
				<div class="g-col-12 g-col-lg-4 order-2 order-lg-3">
					<div class="locations-list">
						<div class="list-group" data-swift-locations-list></div>
					</div>
				</div>
			} 
		</swift-locations-map>

		<template data-swift-template="location-item">
			<div>
				<h6 class="mb-0">@Translate("Address")</h6>
				<div class="fs-7" data-swift="Address"></div>
				<div class="fs-7">
					<span data-swift="Zip"></span>
					<span data-swift="City"></span>
				</div>
				<h6 class="mb-0 mt-2">@Translate("Contact")</h6>
				<div>
					<span class="icon-1 me-1">@ReadFile("/Files/Images/Icons/phone.svg")</span>
					<span>@Translate("Phone"): </span>
					<span data-swift="Phone"></span>
				</div>
				<div>
					<span class="icon-1 me-1">@ReadFile("/Files/Images/Icons/envelope.svg")</span>
					<span>@Translate("Email"): </span>
					<span data-swift="Email"></span>
				</div>
				<div class="mt-3">
					<a href="#" class="hstack gap-2" target="_blank" rel="noopener noreferrer" data-swift="DirectionsUrl" title="@Translate("Get directions")" aria-label="@Translate("Get directions")">
						<span class="icon-1">@ReadFile("/Files/Images/Icons/arrow-turn-right.svg")</span>
						<span>@Translate("Directions")</span>
					</a>
				</div>
			</div>
		</template>
	} 
	else 
	{
		<div class="alert alert-info" role="alert">
			@Translate("Google maps API key is missing")
		</div>
	}
} else {
	<div class="alert alert-info" role="alert">
		@Translate("The map is not properly configured")
	</div>
}
