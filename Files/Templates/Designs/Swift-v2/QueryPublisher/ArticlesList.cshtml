@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.QueryPublisher.QueryResultViewModel>
@using Dynamicweb.Core.Encoders
@using Dynamicweb
@using Dynamicweb.Frontend

@{
	string searchTerm = string.Empty;
	if (!string.IsNullOrEmpty(Dynamicweb.Context.Current.Request["q"]))
	{
		searchTerm = Dynamicweb.Context.Current.Request["q"].Trim();
	}

	int totalResults = Model.Results.Count();
}

@if (totalResults > 0)
{
	<div class="grid gap-3">
		@foreach (var article in Model.Results)
		{
			if (article.TryGetValue("PageId", out object? pageId) && pageId is int) {			
				var pageInfo = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Dynamicweb.Content.Services.Pages?.GetPage((int)pageId));

				if (pageInfo != null)
				{		
					<div class="g-col-6 g-col-lg-3">
						@pageInfo.Name
					</div>
				}
			}
		}
	</div>
}
else
{
	<div class="alert alert-dark w-100 text-center" role="alert">
		@Translate("No posts found")
	</div>
}


