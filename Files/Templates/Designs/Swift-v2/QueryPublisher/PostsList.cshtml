@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.QueryPublisher.QueryResultViewModel>
@using Dynamicweb.Core.Encoders
@using Dynamicweb
@using Dynamicweb.Frontend

@{
	string searchTerm = Dynamicweb.Context.Current.Request.QueryString.Get("q") ?? string.Empty;
}

@if (Model.Results.Count() > 0)
{
	<div class="grid gap-3">
		@foreach (var article in Model.Results)
		{
			if (article.TryGetValue("PageId", out object? pageId) && pageId is int) {			
				var pageInfo = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Dynamicweb.Content.Services.Pages?.GetPage((int)pageId));

				if (pageInfo != null)
				{		
					<a href="#" class="card g-col-6 g-col-lg-3 text-decoration-none">
						<img src="https://placehold.co/600x400" class="card-img-top" alt="@pageInfo.Name">
						<div class="card-body">
							<h5 class="card-title">
								@pageInfo.Name
							</h5>
							<small class="opacity-75">@pageInfo.UpdatedDate</small>	
							<p class="card-text">
								@pageInfo.Description
							</p>
						</div>		
					</a>
				}
			}
		}
	</div>
}
else
{
	<div class="alert alert-dark w-100 text-center" role="alert">
		@Translate("No posts found")
	</div>
}


