@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.QueryPublisher.QueryResultViewModel>
@using Dynamicweb.Core.Encoders
@using Dynamicweb
@using Dynamicweb.Frontend



@{
	string selectedCategory = Dynamicweb.Context.Current.Request.QueryString.Get("FolderName") ?? string.Empty;
	Dictionary<string, int?> categories = new Dictionary<string, int?>();
	categories.Add(Translate("All"), null);
}

@if (Model.Results.Count() > 0)
{
	foreach (var post in Model.Results)
	{
		if (post.TryGetValue("PageId", out object? pageId) && pageId is int)
		{
			var pageObject = Dynamicweb.Content.Services.Pages?.GetPage((int)pageId);
			if (pageObject.IsFolder)
			{
				categories.Add(pageObject.GetDisplayName(), pageObject.ID);
			}
		}
	}
}

<select name="FolderName" onchange="this.closest('form').submit();" class="form-select" aria-label="@Translate("Select category")">
  @foreach (var category in categories)
  {
	string? selected = selectedCategory == category.Value.ToString() ? "selected" : null;
	<option value="@category.Value" @selected>@category.Key</option>
  }
</select>