@inherits Dynamicweb.Rendering.ViewModelTemplate<UserViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Security.UserManagement

@if (Model?.ID == null) return;

@{
    string viewUserLink = !string.IsNullOrEmpty(SearchEngineFriendlyURLs.GetFriendlyUrl(GetPageIdByNavigationTag("ViewUser"))) ? SearchEngineFriendlyURLs.GetFriendlyUrl(GetPageIdByNavigationTag("ViewUser")) : string.Empty;
    string customerCenterLink = !string.IsNullOrEmpty(SearchEngineFriendlyURLs.GetFriendlyUrl(GetPageIdByNavigationTag("CustomerCenter"))) ? SearchEngineFriendlyURLs.GetFriendlyUrl(GetPageIdByNavigationTag("CustomerCenter")) : string.Empty;
    string avatarLink = viewUserLink != string.Empty ? viewUserLink : customerCenterLink;
}

<div class="vstack align-items-center justify-content-center py-2 position-relative">
    <a href="@(avatarLink)" class="stretched-link"></a>

    @if(Model.TryGetImageFile(out ImageFileViewModel? image))
    {
        <div class="align-self-auto hstack justify-content-center p-0" style="height:4rem; aspect-ratio:1;">
            <img src="@image.ToGetImage(new(){ Width = 60, Ratio = "1/1" })" alt="@Model.Name" class="img-thumbnail rounded-circle" itemprop="image"/>
        </div>
    }
    else 
    {
        <div class="btn btn-primary rounded-circle align-self-auto hstack justify-content-center p-0" style="height:4rem; aspect-ratio:1;" data-dw-button="primary">
            <div class="d-flex dw-h6 lh-1 m-0">
                @(Model.GetTwoLetterInitials())
            </div>
        </div>
    }

    <h5 class="h6 mb-0 text-center mt-2">
        @((!string.IsNullOrEmpty(Model?.FirstName) && !string.IsNullOrEmpty(Model?.LastName)) ? $"<span>{Model.FirstName}</span> <span>{Model.LastName}</span>" : Model?.Name)
    </h5>
    
    @if ( UserContext.Current.ImpersonatingUser is not null)
    {
       <p class="text-body text-opacity-50 fs-8 mb-0">@Translate("Impersonated by") @(UserContext.Current.ImpersonatingUser?.Name)</p>
    }
</div>