@inherits ViewModelTemplate<ProductViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Globalization

@functions {
	string? DoubleToString(double? value)
	{
		if (value.HasValue)
		{
			return value.Value.ToString(CultureInfo.InvariantCulture);
		}
		return null;
	}
}

@{
    var product = Model;
    bool quantityNullable = GetViewParameterBoolean("QuantityNullable");
    int? loopCounter  = GetViewParameterInt32("LoopCounter") > 0 ? GetViewParameterInt32("LoopCounter") : null;
    double? stepQty = product.PurchaseQuantityStep > 0 ? product.PurchaseQuantityStep : 1;
    double? minQty = product.PurchaseMinimumQuantity > 0 ? product.PurchaseMinimumQuantity : 1;
    double? valueQty = quantityNullable ? null : minQty > stepQty ? minQty : stepQty;
    string? disableAddToCart = null;
    double? maxQty = null;
    bool isLazyLoadingForProductInfoEnabled = Dynamicweb.Core.Converter.ToBoolean(Dynamicweb.Context.Current?.Items["IsLazyLoadingForProductInfoEnabled"]);

    if (product.ProductType == Dynamicweb.Ecommerce.Products.ProductType.Stock && !product.NeverOutOfstock)
    {
        disableAddToCart = (product.StockLevel <= 0) || (!product.NeverOutOfstock && isLazyLoadingForProductInfoEnabled) ? "disabled" : disableAddToCart;
        maxQty = product.StockLevel;
    }
}

<div class="d-flex align-items-center justify-content-between position-relative">
    <input id="Quantity_@(product.Id)_@product.VariantId.Replace(".", "_")" name="Quantity@(loopCounter)" value="@DoubleToString(valueQty)" step="@DoubleToString(stepQty)" min="@DoubleToString(minQty)" max="@DoubleToString(maxQty)" class="form-control border-0 rounded-0 px-1 flex-grow-0 text-center" type="number" inputmode="numeric" data-qty @disableAddToCart>
    <span class="visually-hidden">@Translate("Type a number, or use the decrease or increase button to change the quantity")</span>

    <button type="button" data-qty-step="decrease" aria-label="@Translate("The button to decrease the quantity")" class="d-flex btn btn-outline-secondary p-2 m-1 border-0 order-first" onclick="this.parentNode.querySelector('[data-qty]').stepDown()" @disableAddToCart>
        <svg class="pe-none" focusable="false" viewBox="0 0 24 24" width="20" height="20" aria-hidden="true">
            <path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M19 13H5v-2h14v2z"></path>
        </svg>
    </button>

    <button type="button" data-qty-step="increase" aria-label="@Translate("The button to increase the quantity")" class="d-flex btn btn-outline-secondary p-2 m-1 border-0 order-last" onclick="this.parentNode.querySelector('[data-qty]').stepUp()" @disableAddToCart>
        <svg class="pe-none" focusable="false" viewBox="0 0 24 24" width="20" height="20" aria-hidden="true">
            <path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M11 12.9961v6h2v-6h6v-2h-6v-6h-2v6H5v2h6z"></path>
        </svg>
    </button>

    <span class="position-absolute pe-none" style="border: 1px solid rgba(var(--bs-body-color-rgb),.1); inset: 0;"></span>

</div>
