@inherits ViewModelTemplate<OrderViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.ProductCatalog

@{
	string baseUrl = SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.Page.ID}");
	var showPricesWithVat = Dynamicweb.Ecommerce.Common.Context.DisplayPricesWithVat;
	var orderlines = Model.OrderLines?.Where(x => x.OrderLineType != Dynamicweb.Ecommerce.Orders.OrderLineType.Discount && x.OrderLineType != Dynamicweb.Ecommerce.Orders.OrderLineType.ProductDiscount);
}

<nav aria-label="breadcrumb">
	<ol class="breadcrumb mb-4" style="--bs-breadcrumb-divider: '>'; --bs-breadcrumb-item-padding-x: 1rem; --bs-breadcrumb-font-size: .875em;">
		<li class="breadcrumb-item"><a href="@(baseUrl)">@(Pageview.Page.GetDisplayName())</a></li>
		<li class="breadcrumb-item active" aria-current="page">@Translate("Quote") @Model.Id</li>
	</ol>
</nav>

<div class="card mb-4">
	<div class="card-body hstack gap-3 flex-wrap">
		<div class="flex-fill">
			<h1 class="h5 mb-2 text-nowrap">@Translate("Quote Details")</h1>
			<div>
				<small class="d-block text-muted text-opacity-75 lh-1 mb-2">@Translate("ID"): <span class="fw-bold">@Model.Id</span></span></small>
				<small class="d-block text-muted text-opacity-75 lh-1 mb-2">@Translate("Currency"): <span class="fw-bold">@Model.Price.CurrencyCode</span></small>
				<div class="hstack gap-2">
					@if (Model.CompletedDate.HasValue)
					{
						<small class="d-block text-muted text-opacity-75 lh-1">@Translate("Placed on") @Model.CompletedDate.Value.ToString(Pageview.Area.CultureInfo)</small>			
					}
					<span class="badge lh-sm bg-secondary" style="background-color:@(Dynamicweb.Ecommerce.Services.OrderStates.GetStateById(Model.StateId).Color) !important;">
						@(Model.StateName)
					</span>
				</div>
			</div>
		</div>
		<button class="btn btn-primary btn-sm hstack gap-2 py-2 px-3 align-self-start" data-dw-button
			hx-get="/dwapi/ecommerce/carts/@(Model.Secret)"
			hx-headers='{"x-dw-template": "/Designs/Swift-v2/eCom/CustomerExperienceCenter/Carts/AcceptQuoteModal.cshtml", "accept": "text/html"}'
			hx-target="main"
			hx-swap="beforeend"
		>
			<span class="icon-2">
				@ReadFile("/Files/Images/Icons/check.svg")
			</span>
			@Translate("Accept quote")
		</button>
	</div>
	<hr class="mx-4 my-0" style="opacity: .15;">
	<div class="card-body table-responsive">
		<table class="table table-md table-hover mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);">
			<thead style="--bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
				<tr>
					<th>@Translate("Item")</th>
					<th class="text-center">@Translate("Unit")</th>
					<th class="text-end">@Translate("Qty")</th>
					<th class="text-end">@Translate("Price")</th>
					<th class="text-end">@Translate("Total")</th>
				</tr>
			</thead>
			<tbody>
				@if (orderlines?.Count() > 0)
				{
					foreach (var orderline in orderlines)
					{
						<tr>
							<td>
								<div class="hstack gap-3">
									@if(orderline.GetProduct()?.DefaultImage.TryGetImageFileViewModel(out var image) is true)
									{
										<div class="d-flex img-thumbnail" style="inline-size: 40px; aspect-ratio: 1;">
											<img class="m-auto" src="@(image?.ToGetImage(new(){Height = 30, Width = 30, Ratio = "1/1", Crop = Dynamicweb.Imaging.ImageHandling.CropMode.KeepAspectRatio }))" alt="@(orderline.ProductName)">
										</div>
									}
									
									<div class="vstack my-auto">
										<span class="text-wrap-nowrap fw-bold">@orderline.ProductName</span>
										<span class="text-muted">@orderline.ProductNumber</span>
									</div>
								</div>
							</td>
							<td class="text-center">@orderline.UnitName</td>
							<td class="text-end">@orderline.Quantity</td>
							<td class="text-end text-price">@orderline.UnitPrice.PriceFormattedNoSymbol</td>
							<td class="text-end text-price">@orderline.Price.PriceFormattedNoSymbol</td>
						</tr>
					}
				}
				else 
				{
					<tr>
						<td colspan="5" class="py-3 text-center text-muted">
							<div class="d-grid rounded-circle m-auto" style="width:4rem;aspect-ratio:1;background-color:rgba(var(--bs-body-color-rgb), .0275);">
								<span class="icon-4">
									@ReadFile("/Files/Images/Icons/file-contract.svg")
								</span>
							</div>
							<div class="mt-1">@Translate("No items")</div>
						</td>
					</tr>
				}
			</tbody>
			<tfoot>
				<tr>
					<td colspan="4" class="text-end fw-semibold">@Translate("Subtotal")</td>
					<td class="text-end"><span class="text-price">@Model.TotalPriceWithoutOrderDiscountsAndFeesAndTaxes.PriceFormattedNoSymbol</span></td>
				</tr>
				@if (Model.ShippingFee.Price != 0.0)
				{
					<tr>
						<td colspan="4" class="text-end">@Translate("Shipping")</td>
						<td class="text-end"><span class="text-price">@Model.ShippingFee.PriceFormattedNoSymbol</span></td>
					</tr>
				}
				@if (Model.PaymentFee.Price != 0.0)
				{
					<tr>
						<td colspan="4" class="text-end">@Translate("Payment")</td>
						<td class="text-end"><span class="text-price">@Model.PaymentFee.PriceFormattedNoSymbol</span></td>
					</tr>
				}
				@if (Model.TotalDiscount.Price != 0.0)
				{
					<tr>
						<td colspan="4" class="text-end">@Translate("Discount")</td>
						<td class="text-end"><span class="text-price">@Model.TotalOrderDiscount.PriceFormattedNoSymbol</span></td>
					</tr>
				}
				@if (showPricesWithVat && Model.TotalTaxes.Price != 0.0)
				{
					<tr>
						<td colspan="4" class="text-end">@Translate("VAT")</td>
						<td class="text-end"><span class="text-price">@Model.TotalTaxes.PriceFormattedNoSymbol</span></td>
					</tr>
				}
				<tr>
					<td colspan="4" class="text-end fw-semibold border-0">@Translate("Total")</td>
					<td class="text-end border-0"><span class="text-price dw-h6">@Model.Price.PriceFormattedNoSymbol</span></td>
				</tr>
			</tfoot>
		</table>
	</div>
</div>

@if (!string.IsNullOrEmpty(Model.CustomerComment) || !string.IsNullOrEmpty(Model.Comment)) {
	<div class="card mb-4">
		<div class="card-body">
			<h2 class="h5 mb-3">@Translate("Comments")</h2>
			@if (!string.IsNullOrEmpty(Model.CustomerComment))
			{
				<div class="small mb-2 text-muted text-opacity-75">@Translate("Customer")</div>
				<div class="fs-7">@Model.CustomerComment</div>
			}
			@if (!string.IsNullOrEmpty(Model.Comment)) 
			{
				<hr class="text-muted">
				<div class="small mb-2 text-muted text-opacity-75">@Translate("Order")</div>
				<div class="fs-7">@Model.Comment</div>
			}
		</div>
	</div>
}

<div class="card mb-4">
	<div class="card-body">
		<h2 class="h5 mb-3">@Translate("Shipping Information")</h2>
		<div class="d-grid gap-4" style="grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));">
			<address class="mb-0 fs-7">
				<div class="small mb-2 text-muted text-opacity-75">@Translate("Shipping Address")</div>
				<div>@Model.DeliveryCompany</div>
				<div>@Model.DeliveryFirstName @Model.DeliverySurname</div>
				<div>@Model.DeliveryAddress</div>
				<div>@Model.DeliveryAddress2</div>
				<div>@Model.DeliveryZip @Model.DeliveryRegion @Model.DeliveryCity</div>
				<div>@Model.DeliveryCountry?.ToUpperInvariant()</div>
			</address>
			<div class="vstack gap-4 fs-7">
				<div>
					<div class="small mb-2 text-muted text-opacity-75">@Translate("Shipping Method")</div>
					<div>@Model.ShippingMethod?.Name</div>
				</div>
				@if (!string.IsNullOrEmpty(Model.TrackAndTraceURL) || !string.IsNullOrEmpty(Model.TrackAndTraceNumber))
				{
					<div>
						<div class="small mb-2 text-muted text-opacity-75">@Translate("Tracking Number")</div>
						<div>
							@if (!string.IsNullOrEmpty(Model.TrackAndTraceURL))
							{
								<a href="@Model.TrackAndTraceURL" target="_blank">@(!string.IsNullOrEmpty(Model.TrackAndTraceNumber) ? $"{Model.TrackAndTraceNumber} ({Model.TrackAndTraceName})" : Model.TrackAndTraceName)</a>
							}
							else
							{
								<span>@Model.TrackAndTraceNumber</span>
							}
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<div class="card mb-4">
	<div class="card-body">
		<h2 class="h5 mb-3">@Translate("Billing Information")</h2>
		<div class="d-grid gap-4" style="grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));">
			<address class="mb-0 fs-7">
				<div class="small mb-2 text-muted text-opacity-75">@Translate("Billing Address")</div>
				<div>@Model.CustomerCompany</div>
				<div>@Model.CustomerName</div>
				<div>@Model.CustomerEmail</div>
				<div>@Model.CustomerPhone</div>
				<div>@Model.CustomerAddress</div>
				<div>@Model.CustomerAddress2</div>
				<div>@Model.CustomerZip @Model.CustomerRegion @Model.CustomerCity</div>
				<div>@Model.CustomerCountry?.ToUpperInvariant()</div>
			</address>
			<div class="vstack gap-4 fs-7">
				<div>
					<div class="small mb-2 text-muted text-opacity-75">@Translate("Payment Method")</div>
					<div>@Model.PaymentMethod?.Name</div>
				</div>
			</div>
		</div>
	</div>
</div>