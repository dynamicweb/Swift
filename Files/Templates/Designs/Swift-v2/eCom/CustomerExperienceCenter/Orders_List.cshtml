@inherits ViewModelTemplate<OrderListViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.ProductCatalog

<header class="hstack gap-3 mb-4">
    <h1 class="h4 mb-0">@(Pageview.Page.GetDisplayName())</h1>
</header>

<nav class="hstack gap-2 mb-3">
    <form class="flex-fill"
        hx-get="@(SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.ID}"))"
        hx-trigger="keyup delay:1s, change" 
        hx-swap="outerHTML"
        hx-target="[data-swift-order-state-filter]"
        hx-select="[data-swift-order-state-filter]"
        hx-replace-url="true"
        hx-include='[name="FilterOrderStateId"]'
    >
        <div class="input-group">
            <span class="input-group-text border-end-0 bg-body">
                <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
            </span>
            <input type="text" class="form-control border-start-0 border-end-0" name="FilterText" placeholder="@Translate("Search orders")...">
            <button type="reset" class="input-group-text border-start-0 bg-body" hx-on:click="this.closest('form').dispatchEvent(new Event('change', { bubbles: true }))">
                <span class="icon-2">@ReadFile("/Files/Images/Icons/xmark.svg")</span>
                <span class="visually-hidden">@Translate("Clear search")</span>
            </button>
        </div>
    </form>
    <form class="dropdown hstack"
        hx-get="@(SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.ID}"))"
        hx-trigger="change" 
        hx-swap="outerHTMLs"
        hx-target="[data-swift-order-state-filter]"
        hx-select="[data-swift-order-state-filter]"
        hx-replace-url="true"
        hx-include='[name="FilterText"]'
        >
        <button class="btn btn-outline-secondary hstack gap-2 ms-auto py-2 px-3 btn-sm" data-dw-button="outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
            <span class="icon-2" data-swift-indicator-origin>
                @ReadFile("/Files/Images/Icons/filter.svg")
            </span>
            @Translate("Filter")
        </button>
        <div class="dropdown-menu p-3 fs-7 shadow" style="--bs-dropdown-min-width:18rem;">
            <div class="fw-bold mb-1">@Translate("Status")</div>
            <div class="d-flex flex-wrap gap-2" data-swift-order-state-filter>
                <input class="visually-hidden" type="radio" name="FilterOrderStateId" value="" id="state_all" checked="@((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId") ?? string.Empty) == string.Empty)">
                <label for="state_all" class="fs-8 py-1 px-2 btn @((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId") ?? string.Empty) == string.Empty ? "btn-primary" : "btn-outline-secondary") lh-1" role="button" data-dw-button>@Translate("All")</label>
                @foreach (var state in Dynamicweb.Ecommerce.Services.OrderStates.GetStatesByOrderType(Dynamicweb.Ecommerce.Orders.OrderType.Order))
                {
                    <input class="visually-hidden" type="radio" name="FilterOrderStateId" value="@(state.Id)" id="state_@(state.Id)" checked="@((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId")) == state.Id)">
                    <label for="state_@(state.Id)" class="fs-8 py-1 px-2 btn @((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId")) == state.Id ? "btn-primary" : "btn-outline-secondary") lh-1" role="button" data-dw-button>@(state.GetName(Dynamicweb.Ecommerce.Common.Context.LanguageID))</label>
                }
            </div>
        </div>
    </form>
</nav>

<div class="card overflow-hidden">
    <div class="table-responsive" style="margin-bottom:-1px;">
        <table class="table mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);" hx-swap-oob="true outerHTML:[data-swift-order-list]" data-swift-order-list>
            <thead style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .0275); --bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
                <tr>
                    <th role="button"><span class="ms-3">Order number</span></th>
                    <th role="button">Customer</th>
                    <th role="button">Placed</th>
                    <th role="button">Items</th>
                    <th role="button">Total</th>
                    <th role="button">Currency</th>
                    <th role="button">Status</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>

                <tr class="position-relative htmx-indicator" style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .02);">
                    <td colspan="9">
                        <div class="d-grid py-4">
                            <span class="m-auto align-items-center text-body text-opacity-25">
                                <div class="spinner spinner-border"></div>
                            </span>
                        </div>
                    </td>
                </tr>
                @{
                    foreach ( var order in Model.Orders )
                    {
                        <tr class="position-relative">
                            <td>
                                <a class="border-0 btn btn-outline-secondary btn-sm py-2 px-3 position-relative z-2" data-dw-button="outline-secondary" href="@(SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.ID}"))?OrderId=@(order.Id)">@(order.Id)</a>
                            </td>
                            <td>@(order.CustomerName)</td>
                            <td>
                                <div class="vstack">
                                    @(order.CreatedAt.ToShortDateString())
                                    <span class="fs-8 text-body text-opacity-50">@(order.CreatedAt.ToShortTimeString())</span>
                                </div>
                            </td>
                            <td>@(order.OrderLines.Count())</td>
                            <td>
                                <div class="text-price">@(order.Price.PriceFormatted)</div>
                            </td>
                            <td>
                                @(order.Price.CurrencyCode)
                            </td>
                            <td>
                                <span class="badge lh-sm" style="background-color:@(Dynamicweb.Ecommerce.Services.OrderStates.GetStateById(order.StateId).Color);">
                                    @(order.StateName)
                                </span>
                            </td>
                            <td>
                                <button class="btn btn-outline-secondary hstack border-0 p-2 position-relative z-2" data-dw-button="outline-secondary">
                                    <span class="icon-2">
                                        @ReadFile("/Files/Images/Icons/ellipsis.svg")
                                    </span>
                                </button>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-secondary hstack border-0 p-2 stretched-link" data-dw-button="outline-secondary" data-bs-toggle="collapse"  data-bs-target="#order_@(order.Id)" aria-expanded="false" aria-controls="order_@(order.Id)">
                                    <span class="icon-2">
                                        @ReadFile("/Files/Images/Icons/chevron-down.svg")
                                    </span>
                                </button>
                            </td>
                        </tr>
                        <tr class="collapse" id="order_@(order.Id)">
                            <td colspan="10" class="text-body text-opacity-75 fs-8" style="background-color:rgba(var(--bs-body-color-rgb), .02);">
                                <div class="grid grid-3 gap-3">
                                    @* Customer *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Customer information")</div>
                                        <div>@(order.CustomerName)</div>
                                        <div>@(order.CustomerEmail)</div>
                                        <div>@(order.CustomerPhone)</div>
                                    </div>
                                    @* Shipping *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Shipping")</div>
                                        <div>@(order.DeliveryAddress)</div>
                                        <div>@(order.DeliveryAddress2)</div>
                                        <div>@(order.DeliveryCity) @(order.DeliveryZip)</div>
                                    </div>
                                    @* Summary *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Order summary")</div>
                                        <div class="hstack">
                                            <div>@Translate("Subtotal"):</div>
                                            <div class="text-price ms-auto">@(order.TotalPriceBeforeFeesAndTaxes.PriceFormatted)</div>
                                        </div>
                                        <div class="hstack">
                                            <div>@Translate("Shipping"):</div>
                                            <div class="text-price ms-auto">@(order.ShippingFee.PriceFormatted)</div>
                                        </div>
                                        <div class="hstack">
                                            <div>@Translate("Payment"):</div>
                                            <div class="text-price ms-auto">@(order.PaymentFee.PriceFormatted)</div>
                                        </div>
                                        <div class="hstack">
                                            <div>@Translate("Taxes"):</div>
                                            <div class="text-price ms-auto">@(order.TotalTaxes.PriceFormatted)</div>
                                        </div>
                                        <div class="hstack">
                                            <div>@Translate("Total"):</div>
                                            <div class="text-price ms-auto">@(order.Price.PriceFormatted)</div>
                                        </div>
                                    </div>
                                    @* Orderlines *@
                                    <div style="grid-column:1/-1;">
                                        <div class="mb-2">@Translate("Items") (@(order.OrderLines.Count()))</div>
                                        <div class="list-group gap-2" style="--bs-list-group-border-width: 0;--bs-list-group-item-padding-x:.5rem;">
                                            @foreach( var orderline in order.OrderLines.Take(7) )
                                            {
                                                <div class="list-group-item hstack gap-3">
                                                    <div>
                                                        @if(orderline.GetProduct().DefaultImage.TryGetImageFileViewModel(out var image))
                                                        {
                                                            <img class="img-thumbnail" src="@(image.ToGetImage(new(){Width = 30, Ratio = "1/1"}))" alt="@orderline.ProductName)">
                                                        }
                                                    </div>
                                                    <div class="vstack align-self-auto">
                                                        <div>@(orderline.ProductName)</div>
                                                        <div class="text-body text-opacity-75">@(orderline.ProductId)</div>
                                                    </div>
                                                    <div class="vstack align-self-auto text-end">
                                                        <div>@(orderline.Price.PriceFormatted)</div>
                                                        <div class="text-body text-opacity-75">@Translate("Qty"): @(orderline.Quantity)</div>
                                                    </div>
                                                </div>
                                            }
                                            @if( order.OrderLines.Count() > 7 )
                                            {
                                                <div class="list-group-item hstack">
                                                    <a class="mx-auto" href="@(Pageview.SearchFriendlyUrl)?OrderId=@(order.Id)" hx-boost="true">@Translate("View all orderlines") (@(order.OrderLines.Count()))</a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }

                    if( Model.Orders.Count() < 1 )
                    {
                        <tr class="position-relative" style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .02);">
                            <td colspan="9">
                                <div class="d-grid py-4">
                                    <span class="fw-bold m-auto vstack text-body text-opacity-25">
                                        <span class="icon-3">
                                            @ReadFile("/Files/Images/Icons/file-contract.svg")
                                        </span>
                                        @Translate("No orders")
                                    </span>
                                </div>
                            </td>
                        </tr>
                    }
                }

            </tbody>

        </table>

    </div>
</div>

<div hx-swap-oob="true outerHTML:[data-swift-order-list-pagination]" data-swift-order-list-pagination>
    
    @if (Model.PageCount > 1)
    {
        <form class="mt-3">
            <ul class="pagination m-0">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    var active = (i == Model.CurrentPage) ? "active" : string.Empty;
                    <li class="page-item @active">
                        <button type="submit" class="page-link" name="PageNum" value="@i">@i</button>
                    </li>
                }
            </ul>
        </form>
    }
</div>