@inherits ViewModelTemplate<OrderListViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.ProductCatalog

@{
    string baseUrl = SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.Page.ID}");
}

<header class="hstack gap-3 mb-4">
    <h1 class="h4 mb-0">@(Pageview.Page.GetDisplayName())</h1>
</header>

<nav class="hstack gap-2 mb-3">
    <form class="flex-fill"
        hx-get="@(baseUrl)"
        hx-trigger="keyup delay:1s, change" 
        hx-swap="outerHTML"
        hx-target="[data-swift-quote-state-filter]"
        hx-select="[data-swift-quote-state-filter]"
        hx-replace-url="true"
        hx-include='[name="FilterOrderStateId"]'
    >
        <div class="input-group">
            <span class="input-group-text border-end-0 bg-body">
                <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
            </span>
            <input type="text" class="form-control border-start-0 border-end-0" name="FilterText" placeholder="@Translate("Search quotes")...">
            <button type="reset" class="input-group-text border-start-0 bg-body" hx-on:click="this.closest('form').dispatchEvent(new Event('change', { bubbles: true }))">
                <span class="icon-2">@ReadFile("/Files/Images/Icons/xmark.svg")</span>
                <span class="visually-hidden">@Translate("Clear search")</span>
            </button>
        </div>
    </form>
    <form class="dropdown hstack"
        hx-get="@(baseUrl)"
        hx-trigger="change" 
        hx-swap="outerHTML"
        hx-target="[data-swift-quote-state-filter]"
        hx-select="[data-swift-quote-state-filter]"
        hx-replace-url="true"
        hx-include='[name="FilterText"]'
        >
        <button class="btn btn-sm btn-outline-secondary hstack gap-2 ms-auto py-2 px-3 text-body" data-dw-button="outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
            <span class="icon-2" data-swift-indicator-origin>
                @ReadFile("/Files/Images/Icons/filter.svg")
            </span>
            @Translate("Filter")
        </button>
        <div class="dropdown-menu p-3 fs-7 shadow" style="--bs-dropdown-min-width:18rem;">
            <div class="fw-bold mb-1">@Translate("Status")</div>
            <div class="d-flex flex-wrap gap-2" data-swift-quote-state-filter>
                <input class="visually-hidden" type="radio" name="FilterOrderStateId" value="" id="state_all" checked="@((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId") ?? string.Empty) == string.Empty)">
                <label for="state_all" class="fs-8 py-1 px-2 btn @((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId") ?? string.Empty) == string.Empty ? "btn-primary" : "btn-outline-secondary text-body") lh-1" role="button" data-dw-button>@Translate("All")</label>
                @foreach (var state in Dynamicweb.Ecommerce.Services.OrderStates.GetStatesByOrderType(Dynamicweb.Ecommerce.Orders.OrderType.Quote))
                {
                    <input class="visually-hidden" type="radio" name="FilterOrderStateId" value="@(state.Id)" id="state_@(state.Id)" checked="@((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId")) == state.Id)">
                    <label for="state_@(state.Id)" class="fs-8 py-1 px-2 btn @((Dynamicweb.Context.Current?.Request.QueryString.Get("FilterOrderStateId")) == state.Id ? "btn-primary" : "btn-outline-secondary text-body") lh-1" role="button" data-dw-button>@(state.GetName(Dynamicweb.Ecommerce.Common.Context.LanguageID))</label>
                }
            </div>
        </div>
    </form>
</nav>

<div class="card overflow-hidden">
    <div class="table-responsive" style="margin-bottom:-1px;" 
        x-data="{
            sortBy: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortBy") ?? "CreatedAt")',
            sortOrder: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortOrder") ?? "desc")',
            sort(val) {
                if(this.sortBy === val) {
                    this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';
                } else {
                    this.sortBy = val;
                }
                this.$refs.sortForm.SortBy.value = this.sortBy;
                this.$refs.sortForm.SortOrder.value = this.sortOrder;
                this.$refs.sortForm.dispatchEvent(new Event('change', { bubbles: true }));
            }
        }"
    >
        <table class="table table-md table-hover mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);" hx-swap-oob="true outerHTML:[data-swift-quote-list]" data-swift-quote-list>
            <thead style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .0275); --bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
                <tr>
                    <th>
                        <form x-ref="sortForm" 
                            hx-get="@(baseUrl)" 
                            hx-swap="none" 
                            hx-replace-url="true" 
                            hx-trigger="change"
                            hx-include='[name="FilterText"],[name="FilterOrderStateId"],[name="PageNum"]'
                        >
                            <input type="hidden" name="SortBy" :value="sortBy">
                            <input type="hidden" name="SortOrder" :value="sortOrder">
                        </form>
                        <span role="button" class="hstack gap-1 ms-3" @@click="sort('Id')">
                            @Translate("Quote number")
                            <span x-show="sortBy === 'Id'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('CustomerName')">
                            @Translate("Customer")
                            <span x-show="sortBy === 'CustomerName'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('CreatedAt')">
                            @Translate("Placed")
                            <span x-show="sortBy === 'CreatedAt'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Items")</th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('PriceBeforeFees')">
                            @Translate("Total")
                            <span x-show="sortBy === 'PriceBeforeFees'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Currency")</th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('StateId')">
                            @Translate("Status")
                            <span x-show="sortBy === 'StateId'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Actions")</th>
                </tr>
            </thead>
            <tbody>
                <tr class="position-relative htmx-indicator" style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .02);">
                    <td colspan="9">
                        <div class="d-grid py-4">
                            <span class="m-auto align-items-center text-body text-opacity-25">
                                <div class="spinner spinner-border"></div>
                            </span>
                        </div>
                    </td>
                </tr>
                @{
                    foreach ( var order in Model.Orders )
                    {
                        <tr class="position-relative">
                            <td>
                                <a class="border-0 btn btn-outline-secondary btn-sm py-2 px-3 position-relative z-2" data-dw-button="outline-secondary" href="@(baseUrl)?OrderId=@(order.Id)">@(order.Id)</a>
                            </td>
                            <td>@(order.CustomerName)</td>
                            <td>
                                <div class="vstack">
                                    @(order.CreatedAt.ToShortDateString())
                                    <span class="fs-8 text-body text-opacity-50">@(order.CreatedAt.ToShortTimeString())</span>
                                </div>
                            </td>
                            <td>@(order.OrderLines.Where(x => x.OrderLineType == Dynamicweb.Ecommerce.Orders.OrderLineType.Product).Count())</td>
                            <td>
                                <div class="text-price">@(order.Price.PriceFormattedNoSymbol)</div>
                            </td>
                            <td>
                                @(order.Price.CurrencyCode)
                            </td>
                            <td>
                                <span class="badge lh-sm bg-secondary" style="background-color:@(Dynamicweb.Ecommerce.Services.OrderStates.GetStateById(order.StateId).Color) !important">
                                    @(order.StateName)
                                </span>
                            </td>
                            <td>
                                <div class="hstack gap-3 dropdown">

                                    <button class="btn btn-outline-secondary text-body hstack border-0 p-2 position-relative z-2" data-dw-button="outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false" data-bs-popper-config='{"strategy":"fixed", "placement":"bottom-end"}'>
                                        <span class="icon-2">
                                            @ReadFile("/Files/Images/Icons/ellipsis.svg")
                                        </span>
                                    </button>

                                    <ul class="dropdown-menu shadow-sm fs-7">
                                        <li>
                                            <a class="dropdown-item hstack gap-2" href="@(baseUrl)?OrderId=@(order.Id)">
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/eye.svg")
                                                </span>
                                                @Translate("View")
                                            </a>
                                        </li>
                                        @if (Dynamicweb.Ecommerce.Services.OrderStates.GetStateById(order.StateId).AllowOrder) {
                                            <li>
                                                <form method="post">
                                                    <input type="hidden" name="QuoteID" id="QuoteID" value="@order.Id">
                                                    <input type="hidden" name="CustomerCenterCmd" value="AcceptQuote">
                                                    <button type="submit" class="dropdown-item hstack gap-2">
                                                        <span class="icon-2">
                                                            @ReadFile("/Files/Images/Icons/check.svg")
                                                        </span>
                                                        @Translate("Accept quote")
                                                    </button>
                                                </form>
                                            </li>
                                        }
                                    </ul>
                                    <button type="button" class="btn btn-outline-secondary text-body hstack border-0 p-2 stretched-link" data-dw-button="outline-secondary" data-bs-toggle="collapse"  data-bs-target="#order_@(order.Id)" aria-expanded="false" aria-controls="order_@(order.Id)">
                                        <span class="collapse-chevron-icon"></span>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <tr class="collapse" id="order_@(order.Id)">
                            <td colspan="10" class="text-body text-opacity-75 fs-8" style="background-color:rgba(var(--bs-body-color-rgb), .02);">
                                <div class="grid grid-3 gap-3">
                                    @* Customer *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Billing")</div>
                                        <div>@(order.CustomerName)</div>
                                        <div>@(order.CustomerEmail)</div>
                                        <div>@(order.CustomerPhone)</div>
                                    </div>
                                    @* Shipping *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Shipping")</div>
                                        <div>@(order.DeliveryCompany)</div>
                                        <div>@(order.DeliveryAddress)</div>
                                        <div>@(order.DeliveryAddress2)</div>
                                        <div>@(order.DeliveryZip) @(order.DeliveryCity)</div>
                                        <div>@(order.DeliveryCountry.ToUpperInvariant())</div>
                                    </div>
                                    @* Summary *@
                                    <div class="vstack">
                                        <div class="fw-bold mb-0">@Translate("Order summary")</div>
                                        <div class="hstack">
                                            <div>@Translate("Subtotal"):</div>
                                            <div class="text-price ms-auto">@(order.TotalPriceBeforeFeesAndTaxes.PriceFormatted)</div>
                                        </div>
                                        @if (order.ShippingFee.Price != 0.0) {
                                            <div class="hstack">
                                                <div>@Translate("Shipping"):</div>
                                                <div class="text-price ms-auto">@(order.ShippingFee.PriceFormatted)</div>
                                            </div>
                                        }
                                        @if (order.PaymentFee.Price != 0.0) {
                                            <div class="hstack">
                                                <div>@Translate("Payment"):</div>
                                                <div class="text-price ms-auto">@(order.PaymentFee.PriceFormatted)</div>
                                            </div>
                                        }
                                        @if (order.TotalTaxes.Price != 0.0) {
                                            <div class="hstack">
                                                <div>@Translate("Taxes"):</div>
                                                <div class="text-price ms-auto">@(order.TotalTaxes.PriceFormatted)</div>
                                            </div>
                                        }
                                        @if (order.Price.Vat != 0.0) {
                                            <div class="hstack">
                                                <div>@Translate("VAT") @(order.Price.VATPercent)%:</div>
                                                <div class="text-price ms-auto">@(order.Price.VatFormatted)</div>
                                            </div>
                                        }
                                        @if (order.TotalDiscount.Price != 0.0) {
                                            <div class="hstack">
                                                <div>@Translate("Discount"):</div>
                                                <div class="text-price ms-auto">@(order.TotalDiscount.PriceFormatted)</div>
                                            </div>
                                        }
                                        <div class="hstack">
                                            <div>@Translate("Total"):</div>
                                            <div class="text-price ms-auto">@(order.Price.PriceFormatted)</div>
                                        </div>
                                    </div>
                                    @* Orderlines *@
                                    <div style="grid-column:1/-1;">
                                        <div class="mb-2">@Translate("Items") (@(order.OrderLines.Count()))</div>
                                        <div class="list-group gap-2" style="--bs-list-group-border-width: 0;--bs-list-group-item-padding-x:.5rem;">
                                            @foreach( var orderline in order.OrderLines.Take(7) )
                                            {
                                                <div class="list-group-item d-grid align-items-center gap-3" style="grid-template-columns: 40px 2fr 1fr 1fr 1fr 1fr;">
                                                    @if(orderline.GetProduct()?.DefaultImage.TryGetImageFileViewModel(out var image) is true)
                                                    {
                                                        <div class="d-flex img-thumbnail" style="inline-size: 40px; aspect-ratio: 1;">
                                                            <img class="my-auto" src="@(image?.ToGetImage(new(){Height = 30, Width = 30, Ratio = "1/1", Crop = Dynamicweb.Imaging.ImageHandling.CropMode.KeepAspectRatio }))" alt="@(orderline.ProductName)">
                                                        </div>
                                                    }
                                                    <div class="vstack align-self-auto">
                                                        <div>@(orderline.ProductName)</div>
                                                        <div class="text-body text-opacity-50">@(orderline.ProductId)</div>
                                                    </div>
                                                    <div class="vstack align-self-auto text-center">
                                                        <div>@(orderline.UnitName)</div>
                                                    </div>
                                                    <div class="vstack align-self-auto text-end">
                                                        <div class="text-price">@(orderline.UnitPrice.PriceFormatted)</div>
                                                    </div>
                                                    <div class="vstack align-self-auto text-center">
                                                        <div>@(orderline.Quantity)</div>
                                                    </div>
                                                    <div class="vstack align-self-auto text-end">
                                                        <div class="text-price">@(orderline.Price.PriceFormatted)</div>
                                                        <div class="text-body text-opacity-50">@Translate("Total price")</div>
                                                    </div>
                                                </div>
                                            }
                                            @if( order.OrderLines.Count() > 7 )
                                            {
                                                <div class="list-group-item hstack">
                                                    <a class="mx-auto" href="@(Pageview.SearchFriendlyUrl)?OrderId=@(order.Id)">@Translate("View all orderlines") (@(order.OrderLines.Count()))</a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }

                    if( Model.Orders.Count() < 1 )
                    {
                        <tr class="position-relative">
                            <td colspan="8">
                                <div class="d-grid py-4">
                                    <span class="m-auto">
                                        <div class="d-grid rounded-circle m-auto" style="width:4rem;aspect-ratio:1;background-color:rgba(var(--bs-body-color-rgb), .0275);">
                                            <span class="icon-4 text-body text-opacity-50">
                                                @ReadFile("/Files/Images/Icons/file-contract.svg")
                                            </span>
                                        </div>
                                        <div class="mt-3">@Translate("No orders found")</div>
                                    </span>
                                </div>
                            </td>
                        </tr>
                    }
                }

            </tbody>

        </table>

    </div>
</div>


<div hx-swap-oob="true outerHTML:[data-swift-quote-list-pagination]" data-swift-quote-list-pagination>
    @if (Model.PageCount > 1)
    {
        <form class="mt-3">
            <ul class="pagination m-0">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    var active = (i == Model.CurrentPage) ? "active" : string.Empty;
                    <li class="page-item @active">
                        <button type="submit"
                                class="page-link"
                                name="PageNum"
                                value="@i"
                                aria-label="@Translate("Go to page") @i"
                                @(active == "active" ? "aria-current=\"page\"" : "")>
                            @i
                        </button>
                    </li>
                }
            </ul>
        </form>
    }
</div>