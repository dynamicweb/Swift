@inherits ViewModelTemplate<OrderListViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.ProductCatalog

@{
    string baseUrl = SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.Page.ID}");
}

<header class="hstack gap-3 mb-4">
    <h1 class="h4 mb-0">@(Pageview.Page.GetDisplayName())</h1>
</header>

<nav class="hstack gap-2 mb-3">
    <form class="flex-fill"
        hx-get="@(baseUrl)"
        hx-trigger="keyup delay:.5s, change" 
        hx-swap="none"
        hx-replace-url="false"
    >
        <div class="input-group">
            <span class="input-group-text border-end-0 bg-body">
                <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
            </span>
            <input type="text" class="form-control border-start-0 border-end-0" name="FilterText" placeholder="@Translate("Search carts")...">
            <button type="reset" class="input-group-text border-start-0 bg-body" hx-on:click="this.closest('form').dispatchEvent(new Event('change', { bubbles: true }))">
                <span class="icon-2">@ReadFile("/Files/Images/Icons/xmark.svg")</span>
                <span class="visually-hidden">@Translate("Clear search")</span>
            </button>
        </div>
    </form>

    <button type="button" class="btn btn-sm btn-primary hstack gap-2 ms-auto py-2 px-3" data-dw-button
        hx-trigger="click"
        hx-get="@(baseUrl)"
        hx-vals='{"LayoutTemplate": "/Designs/Swift-v2/eCom/CustomerExperienceCenter/Carts/CreateCartModal.cshtml"}'
        hx-target="body"
        hx-swap="beforeend"
    >
        <span class="icon-2 text-opacity-50">
            @ReadFile("/Files/Images/Icons/plus.svg")
        </span>
        @Translate("Add cart")
    </button>
        
</nav>

<div class="card overflow-hidden">
    <div class="table-responsive" style="margin-bottom:-1px;" 
        x-data="{
            sortBy: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortBy") ?? "CreatedAt")',
            sortOrder: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortOrder") ?? "desc")',
            sort(val) {
                if(this.sortBy === val) {
                    this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';
                } else {
                    this.sortBy = val;
                }
                this.$refs.sortForm.SortBy.value = this.sortBy;
                this.$refs.sortForm.SortOrder.value = this.sortOrder;
                this.$refs.sortForm.dispatchEvent(new Event('change', { bubbles: true }));
            }
        }"
    >
        <table class="table table-md table-hover mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);" hx-swap-oob="true outerHTML:[data-swift-cart-list]" data-swift-cart-list>
            <thead style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .0275); --bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
                <tr>
                    <th>
                        <form x-ref="sortForm" 
                            hx-get="@(baseUrl)" 
                            hx-swap="none" 
                            hx-replace-url="false" 
                            hx-trigger="change"
                            hx-include='[name="FilterText"],[name="PageNum"]'
                        >
                            <input type="hidden" name="SortBy" :value="sortBy">
                            <input type="hidden" name="SortOrder" :value="sortOrder">
                        </form>
                        <span role="button" class="hstack gap-1 ms-3 text-nowrap" @@click="sort('Id')">
                            @Translate("Cart number")
                            <span x-show="sortBy === 'Id'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('CreatedAt')">
                            @Translate("Created")
                            <span x-show="sortBy === 'CreatedAt'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Items")</th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('PriceBeforeFees')">
                            @Translate("Total")
                            <span x-show="sortBy === 'PriceBeforeFees'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('StateId')">
                            @Translate("Status")
                            <span x-show="sortBy === 'StateId'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Actions")</th>
                </tr>
            </thead>
            <tbody>
                <tr class="position-relative htmx-indicator" style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .02);">
                    <td colspan="9">
                        <div class="d-grid py-4">
                            <span class="m-auto align-items-center text-body text-opacity-25">
                                <div class="spinner spinner-border"></div>
                            </span>
                        </div>
                    </td>
                </tr>
                @{
                    foreach ( var order in Model.Orders )
                    {
                        <tr class="position-relative">
                            <td>
                                <div class="vstack position-relative" style="max-inline-size: min-content;">
                                    <a href="@(baseUrl)?OrderId=@(order.Id)" class="hstack gap-1 border-0 btn btn-outline-secondary btn-sm py-2 px-3 position-relative z-2" style="margin-top:-1.2rem;" data-dw-button>
                                        @(order.Id)
                                        @if(Dynamicweb.Ecommerce.Common.Context.Cart?.Id == order.Id) //Is this cart active?
                                        {
                                            <span class="hstack text-success rounded-circle align-self-auto"
                                                data-bs-toggle="tooltip"
                                                title="@Translate("Active cart")"
                                            >
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/circle-check.svg")
                                                </span>
                                            </span>
                                        }
                                    </a>
                                    <a 
                                        href="@(baseUrl)?OrderId=@(order.Id)" 
                                        class="fs-8 text-body text-opacity-50 ps-3 lh-1 text-truncate position-absolute top-100 w-100 text-decoration-none"
                                        data-bs-toggle="tooltip"
                                        title="@(order.DisplayName != string.Empty ? order.DisplayName : "-")"
                                    >@(order.DisplayName != string.Empty ? order.DisplayName : "-")</a>
                                </div>
                            </td>
                            <td>
                                <div class="vstack">
                                    @(order.CreatedAt.ToShortDateString())
                                    <span class="fs-8 text-body text-opacity-50">@(order.CreatedAt.ToShortTimeString())</span>
                                </div>
                            </td>
                            <td>@(order.OrderLines.Where(x => x.OrderLineType == Dynamicweb.Ecommerce.Orders.OrderLineType.Product).Count())</td>
                            <td>
                                <div class="text-price">@(order.Price.PriceFormatted)</div>
                            </td>
                            <td>
                                <span class="badge lh-sm bg-secondary" style="background-color:@(Dynamicweb.Ecommerce.Services.OrderStates.GetStateById(order.StateId).Color) !important">
                                    @(order.StateName)
                                </span>
                            </td>
                            <td>
                                <div class="hstack gap-3">
                                    <button class="btn btn-outline-secondary text-body hstack border-0 p-2 position-relative z-2" data-dw-button="outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <span class="icon-2">
                                            @ReadFile("/Files/Images/Icons/ellipsis.svg")
                                        </span>
                                    </button>
                                    <ul class="dropdown-menu shadow-sm fs-7 p-1">
                                        <li>
                                            <a class="dropdown-item hstack gap-2 ps-2 pe-3 rounded-1" href="@(baseUrl)?OrderId=@(order.Id)">
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/eye.svg")
                                                </span>
                                                @Translate("View")
                                            </a>
                                        </li>
                                        @if(Dynamicweb.Ecommerce.Common.Context.Cart?.Id != order.Id) //Is this cart active?
                                        {
                                            <li>
                                                <button type="button" class="dropdown-item hstack gap-2 ps-2 pe-3 rounded-1"
                                                    hx-trigger="click"
                                                    hx-get="/dwapi/ecommerce/carts/@(order.Secret)" 
                                                    hx-headers='{"x-dw-template": "/Designs/Swift-v2/eCom/CustomerExperienceCenter/Carts/SetCartToast.cshtml", "accept": "text/html"}'
                                                    hx-target="body"
                                                    hx-swap="beforeend"
                                                >
                                                    <span class="icon-2">
                                                        @ReadFile("/Files/Images/Icons/circle-check.svg")
                                                    </span>
                                                    @Translate("Set as active")
                                                </button>
                                            </li>
                                        }
                                        <li class="mx-n1"><hr class="dropdown-divider my-1"></li>
                                        <li>
                                            <button class="dropdown-item hstack gap-2 ps-2 pe-3 rounded-1"
                                                hx-trigger="click"
                                                hx-get="/dwapi/ecommerce/carts/@(order.Secret)" 
                                                hx-headers='{"x-dw-template": "/Designs/Swift-v2/eCom/CustomerExperienceCenter/Carts/RenameCartModal.cshtml", "accept": "text/html"}'
                                                hx-swap="beforeend"
                                                hx-target="body"
                                            >
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/pen.svg")
                                                </span>
                                                @Translate("Rename")
                                            </button>
                                        </li>
                                        <li>
                                            <a class="dropdown-item hstack gap-2 ps-2 pe-3 rounded-1" href="@(baseUrl)?cartcmd=copy&CartId=@(order.Id)&CartUserID=@(order.CustomerUserId)&CartName=@($"Copy_of_{order.Id}")">
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/copy.svg")
                                                </span>
                                                @Translate("Copy")
                                            </a>
                                        </li>
                                        <li class="mx-n1"><hr class="dropdown-divider my-1"></li>
                                        <li>
                                            <button class="dropdown-item hstack gap-2 ps-2 pe-3 rounded-1 text-danger"
                                                hx-trigger="click"
                                                hx-get="/dwapi/ecommerce/carts/@(order.Secret)" 
                                                hx-headers='{"x-dw-template": "/Designs/Swift-v2/eCom/CustomerExperienceCenter/Carts/DeleteCartModal.cshtml", "accept": "text/html"}'
                                                hx-swap="beforeend"
                                                hx-target="body"
                                            >
                                                <span class="icon-2">
                                                    @ReadFile("/Files/Images/Icons/trash.svg")
                                                </span>
                                                @Translate("Delete")
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }

                    if( Model.Orders.Count() < 1 )
                    {
                        <tr class="position-relative">
                            <td colspan="8">
                                <div class="d-grid py-4">
                                    <span class="m-auto">
                                        <div class="d-grid rounded-circle m-auto" style="width:4rem;aspect-ratio:1;background-color:rgba(var(--bs-body-color-rgb), .0275);">
                                            <span class="icon-4 text-body text-opacity-50">
                                                @ReadFile("/Files/Images/Icons/cart-shopping.svg")
                                            </span>
                                        </div>
                                        <div class="mt-3">@Translate("No carts found")</div>
                                    </span>
                                </div>
                            </td>
                        </tr>
                    }
                }

            </tbody>

        </table>

    </div>
</div>


<div hx-swap-oob="true outerHTML:[data-swift-cart-list-pagination]" data-swift-cart-list-pagination>
    @if (Model.PageCount > 1)
    {
        <form class="mt-3">
            <ul class="pagination m-0">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    var active = (i == Model.CurrentPage) ? "active" : string.Empty;
                    <li class="page-item @active">
                        <button type="submit"
                                class="page-link"
                                name="PageNum"
                                value="@i"
                                aria-label="@Translate("Go to page") @i"
                                @(active == "active" ? "aria-current=\"page\"" : "")>
                            @i
                        </button>
                    </li>
                }
            </ul>
        </form>
    }
</div>