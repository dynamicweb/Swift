@inherits ViewModelTemplate<UserListViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Users.Frontend
@using Dynamicweb.Security.UserManagement

@{
    string baseUrl = SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.ID}");
}

<header class="hstack gap-3 mb-4">
    <div class="vstack gap-1 flex-fill">
        <h1 class="h4 mb-0">@(Pageview.Page.GetDisplayName())</h1>
        <p class="fs-7 mb-0 text-body text-opacity-50">
            @if(UserContext.Current.ImpersonatingUser == null) 
            {
                @Translate("Impersonate and shop on behalf of")
            }
            else
            {
                <span>@Translate("You are currently impersonating")</span> <span class="fw-bold">@Pageview.User?.Name</span>
            }
        </p>
    </div>
</header>

<nav class="hstack gap-2 mb-3">
    <form class="flex-fill"
        hx-get="@(baseUrl)"
        hx-trigger="keyup delay:1s, change" 
        hx-swap="none"
        hx-replace-url="true"
    >
        <div class="input-group">
            <span class="input-group-text border-end-0 bg-body">
                <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
            </span>
            <input type="text" class="form-control border-start-0 border-end-0" name="search" value="" placeholder="@Translate("Search users by name or email")...">
            <button type="reset" class="input-group-text border-start-0 bg-body" hx-on:click="this.closest('form').dispatchEvent(new Event('change', { bubbles: true }))">
                <span class="icon-2">@ReadFile("/Files/Images/Icons/xmark.svg")</span>
                <span class="visually-hidden">@Translate("Clear search")</span>
            </button>
        </div>
    </form>
</nav>

<div class="card overflow-hidden">
    <div class="table-responsive" style="margin-bottom:-1px;">
        <table class="table table-md table-hover mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);" hx-swap-oob="true outerHTML:[data-swift-user-list]" data-swift-user-list>
            <thead style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .0275); --bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
                <tr>
                    <th>@Translate("User")</th>
                    <th>@Translate("Email")</th>
                    <th>@Translate("Status")</th>
                    <th>@Translate("Last active")</th>
                    <th></th>
                </tr>
            </thead>

            <tbody class="border-top-0">
                @foreach (var user in Model.Users)
                {
                    <tr class="position-relative">
                        <td>
                            <div class="hstack gap-2">
                                <div class="btn btn-@(Pageview.User?.ID == user.ID ? "outline-primary" : "primary") rounded-circle hstack justify-content-center p-0 me-2" style="height:2rem; aspect-ratio:1;@(Pageview.User?.ID == user.ID ? "border-style:dashed;" : null)" data-dw-button>
                                    <div class="d-flex fw-bold fs-7 lh-1 m-0">
                                        @(user.GetTwoLetterInitials())
                                    </div>
                                </div>
                                <div class="text-wrap-nowrap">@user.Name</div>
                            </div>
                        </td>
                        <td><span class="text-body text-opacity-50">@user.Email</span></td>
                        <td><span class="badge lh-sm text-body border">@user.GetStatus()</span></td>
                        <td>
                            <div class="vstack">
                                @(Dynamicweb.Security.UserManagement.UserManagementServices.Users.GetUserById(user.ID)?.LastLogOnOn?.ToShortDateString())
                                <span class="fs-8 text-body text-opacity-50">@(Dynamicweb.Security.UserManagement.UserManagementServices.Users.GetUserById(user.ID)?.LastLogOnOn?.ToShortTimeString())</span>
                            </div>
                        </td>
                        <td>
                            <div class="hstack gap-3">
                                <button class="btn btn-outline-secondary text-body hstack border-0 p-2 position-relative z-2 ms-auto" data-dw-button="outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="icon-2">
                                        @ReadFile("/Files/Images/Icons/ellipsis.svg")
                                    </span>
                                </button>
                                <ul class="dropdown-menu shadow-sm p-1 fs-7">
                                    <li>
                                        @if (Pageview.User?.ID != user.ID)
                                        {
                                            <form method="get">
                                                <input type="hidden" name="NowImpersonating" value="true" />
                                                <button type="submit" name="DWExtranetSecondaryUserSelector" value="@user.ID" class="dropdown-item hstack pe-4">
                                                    <span class="icon-2 me-2">
                                                        @ReadFile("/Files/Images/Icons/user-group.svg") 
                                                    </span>
                                                    @Translate("Impersonate")
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <a href="Default.aspx?ID=@(Pageview.ID)&DwExtranetRemoveSecondaryUser=1" class="dropdown-item hstack pe-4" title="@Translate("Stop impersonation")">
                                                <span class="icon-2 me-2">@ReadFile("/Files/Images/Icons/arrows-repeat.svg")</span>
                                                <span>
                                                    @Translate("Switch back to") @(UserContext.Current.ImpersonatingUser?.Name)
                                                </span>
                                            </a>
                                        }
                                    </li>
                                </ul>
                                <button type="button" class="btn btn-outline-secondary text-body hstack border-0 p-2 stretched-link" data-dw-button="outline-secondary" data-bs-toggle="collapse"  data-bs-target="#user_@(user.ID)" aria-expanded="false" aria-controls="user_@(user.ID)">
                                    <span class="collapse-chevron-icon"></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                    <tr class="collapse" id="user_@(user.ID)">
                        <td colspan="6" class="text-body text-opacity-75" style="background-color:rgba(var(--bs-body-color-rgb), .02);">
                            <div class="grid grid-3 gap-3">
                                @* Contact *@
                                <div class="vstack">
                                    <div class="fw-bold mb-0">@Translate("Contact information")</div>
                                    <div>@(user.Name)</div>
                                    <div>@(user.Email)</div>
                                    <div>@(user.Phone)</div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }

                @if( Model.Users.Count() < 1 )
                {
                    <tr class="position-relative">
                        <td colspan="8">
                            <div class="d-grid py-4">
                                <span class="m-auto">
                                    <div class="d-grid rounded-circle m-auto" style="width:4rem;aspect-ratio:1;background-color:rgba(var(--bs-body-color-rgb), .0275);">
                                        <span class="icon-4 text-body text-opacity-50">
                                            @ReadFile("/Files/Images/Icons/user.svg")
                                        </span>
                                    </div>
                                    <div class="mt-3">@Translate("No users found")</div>
                                </span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div hx-swap-oob="true outerHTML:[data-swift-user-list-pagination]" data-swift-user-list-pagination>
    @if (Model.PageCount > 1)
    {
        <form class="mt-3">
            <ul class="pagination m-0">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    var active = (i == Model.CurrentPage) ? "active" : string.Empty;
                    <li class="page-item @active">
                        <button type="submit"
                        class="page-link"
                        name="PageNum"
                        value="@i"
                        aria-label="@Translate("Go to page") @i"
                        @(active == "active" ? "aria-current=\"page\"" : "")>
                            @i
                        </button>
                    </li>
                }
            </ul>
        </form>
    }
</div>