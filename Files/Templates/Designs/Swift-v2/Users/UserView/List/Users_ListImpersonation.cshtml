@inherits ViewModelTemplate<UserListViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Users.Frontend
@using Dynamicweb.Security.UserManagement

@{
    string baseUrl = SearchEngineFriendlyURLs.GetFriendlyUrl($"default.aspx?ID={Pageview.ID}");
}

<header class="hstack gap-3 mb-4">
    <div class="vstack gap-1 flex-fill">
        <h1 class="h4 mb-0">@(Pageview.Page.GetDisplayName())</h1>
    </div>
</header>

<nav class="hstack gap-2 mb-3">
    <form class="flex-fill"
        hx-get="@(baseUrl)"
        hx-trigger="keyup delay:1s, change" 
        hx-swap="none"
        hx-replace-url="true"
    >
        <div class="input-group">
            <span class="input-group-text border-end-0 bg-body">
                <span class="htmx-indicator spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span class="icon-2" data-swift-indicator-origin>@ReadFile("/Files/Images/Icons/magnifying-glass.svg")</span>
            </span>
            <input type="text" class="form-control border-start-0 border-end-0" name="search" value="" placeholder="@Translate("Search users by name or email")...">
            <button type="reset" class="input-group-text border-start-0 bg-body" hx-on:click="this.closest('form').dispatchEvent(new Event('change', { bubbles: true }))">
                <span class="icon-2">@ReadFile("/Files/Images/Icons/xmark.svg")</span>
                <span class="visually-hidden">@Translate("Clear search")</span>
            </button>
        </div>
    </form>
</nav>

<div class="card overflow-hidden">
    <div class="table-responsive" style="margin-bottom:-1px;"
    x-data="{
        sortBy: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortBy") ?? "Name")',
        sortOrder: '@(Dynamicweb.Context.Current?.Request.QueryString.Get("SortOrder") ?? "desc")',
        sort(val) {
            if(this.sortBy === val) {
                this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';
            } else {
                this.sortBy = val;
            }
            this.$refs.sortForm.SortBy.value = this.sortBy;
            this.$refs.sortForm.SortOrder.value = this.sortOrder;
            this.$refs.sortForm.dispatchEvent(new Event('change', { bubbles: true }));
        }
    }"
    >
        <table class="table table-md table-hover mb-0 align-middle fs-7" style="--bs-table-color: var(--bs-body-color);" hx-swap-oob="true outerHTML:[data-swift-user-list]" data-swift-user-list>
            <thead style="--bs-table-bg: rgba(var(--bs-body-color-rgb), .0275); --bs-table-color: rgba(var(--bs-body-color-rgb), 0.5);">
                <tr>
                    <th>
                        <form x-ref="sortForm" 
                            hx-get="@(baseUrl)" 
                            hx-swap="none" 
                            hx-replace-url="true" 
                            hx-trigger="change"
                        >
                            <input type="hidden" name="SortBy" :value="sortBy">
                            <input type="hidden" name="SortOrder" :value="sortOrder">
                        </form>
                        <span role="button" class="hstack gap-1" @@click="sort('Name')">
                            @Translate("User")
                            <span x-show="sortBy === 'Name'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Customer number")</th>
                    <th>@Translate("Company")</th>
                    <th>@Translate("Email")</th>
                    <th>
                        <span role="button" class="hstack gap-1" @@click="sort('LastLogOnOn')">
                            @Translate("Last active")
                            <span x-show="sortBy === 'LastLogOnOn'">
                                <span x-text="sortOrder === 'asc' ? '↑' : '↓'"></span>
                            </span>
                        </span>
                    </th>
                    <th>@Translate("Actions")</th>
                </tr>
            </thead>

            <tbody class="border-top-0">
                @foreach (var user in Model.Users)
                {
                    <tr class="position-relative">
                        <td>
                            <div class="hstack gap-2">
                                @if(user.TryGetImageFile(out ImageFileViewModel? image))
                                {
                                    <div class="align-self-auto hstack justify-content-center p-0" style="height:2rem; aspect-ratio:1;">
                                        <img src="@image.ToGetImage(new(){ Width = 40, Ratio = "1/1" })" alt="@user.Name" class="img-thumbnail rounded-circle" itemprop="image"/>
                                    </div>
                                }
                                else 
                                {
                                    <div class="btn btn-primary rounded-circle align-self-auto hstack justify-content-center p-0 pe-none" style="height:2rem; aspect-ratio:1;" data-dw-button>
                                        <div class="d-flex dw-h6 fs-7 lh-1 m-0">
                                            @(user.GetTwoLetterInitials())
                                        </div>
                                    </div>
                                }
                                <div class="text-wrap-nowrap">@user.Name</div>
                            </div>
                        </td>
                        <td><span class="text-body text-opacity-50">@user.CustomerNumber</span></td>
                        <td><span class="text-body text-opacity-50">@user.Company</span></td>
                        <td><span class="text-body text-opacity-50">@user.Email</span></td>
                        <td>
                            <div class="vstack">
                                @(Dynamicweb.Security.UserManagement.UserManagementServices.Users.GetUserById(user.ID)?.LastLogOnOn?.ToShortDateString())
                                <span class="fs-8 text-body text-opacity-50">@(Dynamicweb.Security.UserManagement.UserManagementServices.Users.GetUserById(user.ID)?.LastLogOnOn?.ToShortTimeString())</span>
                            </div>
                        </td>
                        <td>
                            <div class="hstack gap-3">
                                @if (Pageview.User?.ID != user.ID)
                                {
                                    <form method="get" class="me-3">
                                        <input type="hidden" name="NowImpersonating" value="true" />
                                        <button 
                                        type="submit" 
                                        name="DWExtranetSecondaryUserSelector" 
                                        value="@user.ID" 
                                        class="btn btn-outline-secondary text-body hstack border-0 p-2 position-relative z-2" 
                                        data-dw-button
                                        data-bs-toggle="tooltip" data-bs-placement="top"
                                        data-bs-title="@Translate("Impersonate")"
                                        title="@Translate("Impersonate")"
                                        >
                                            <span class="icon-2">
                                                @ReadFile("/Files/Images/Icons/user-group.svg") 
                                            </span>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <a href="Default.aspx?ID=@(Pageview.ID)&DwExtranetRemoveSecondaryUser=1" class="btn btn-secondary text-body hstack border-0 p-2 position-relative z-2 me-3" 
                                    data-dw-button
                                    data-bs-toggle="tooltip" data-bs-placement="top"
                                    data-bs-title="@Translate("Switch back to") @(UserContext.Current.ImpersonatingUser?.Name)"
                                    title="@Translate("Stop impersonation")"
                                    >
                                        <span class="icon-2">@ReadFile("/Files/Images/Icons/arrows-repeat.svg")</span>
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>                    
                }

                @if( Model.Users.Count() < 1 )
                {
                    <tr class="position-relative">
                        <td colspan="8">
                            <div class="d-grid py-4">
                                <span class="m-auto">
                                    <div class="d-grid rounded-circle m-auto" style="width:4rem;aspect-ratio:1;background-color:rgba(var(--bs-body-color-rgb), .0275);">
                                        <span class="icon-4 text-body text-opacity-50">
                                            @ReadFile("/Files/Images/Icons/user.svg")
                                        </span>
                                    </div>
                                    <div class="mt-3">@Translate("No users found")</div>
                                </span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div hx-swap-oob="true outerHTML:[data-swift-user-list-pagination]" data-swift-user-list-pagination>
    @if (Model.PageCount > 1)
    {
        <form class="mt-3">
            <ul class="pagination m-0">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    var active = (i == Model.CurrentPage) ? "active" : string.Empty;
                    <li class="page-item @active">
                        <button type="submit"
                        class="page-link"
                        name="PageNum"
                        value="@i"
                        aria-label="@Translate("Go to page") @i"
                        @(active == "active" ? "aria-current=\"page\"" : "")>
                            @i
                        </button>
                    </li>
                }
            </ul>
        </form>
    }
</div>