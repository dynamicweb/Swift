@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@{
	var billingHideEditBillingAddress = Pageview.CurrentParagraph?.Item["HideEditBillingAddress"] != null ? Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideEditBillingAddress"].ToString()) : false;

	int billingFieldCount = 0; //Helps us render addresses that contains more than just the auto set country
	bool summaryBillingIsStandardSwiftTemplates = Pageview.AreaSettings.GetString("AddressFieldsBasedOn", "swift") == "swift";

	string billingAddressString = string.Empty;
	if (summaryBillingIsStandardSwiftTemplates)
	{
		List<string> address = new List<string>();
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Company")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Company"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Name")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Name"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Address")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Address"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Address2")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Address2"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Zip")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Zip"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.City")))
		{
			address.Add(GetString("Ecom:Order.Delivery.City"));
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Region")))
		{
			string regionName = GetString("Ecom:Order.Delivery.Region");
			foreach (LoopItem region in GetLoop("DeliveryRegions"))
			{
				if (region.GetString("Ecom:DeliveryRegion.IsDeliveryRegion") == "true")
				{
					regionName = region.GetString("Ecom:DeliveryRegion.Name");
				}
			}

			address.Add(regionName);
			billingFieldCount++;
		}
		if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Country")))
		{
			address.Add(GetString("Ecom:Order.Delivery.Country"));
			billingFieldCount++;
		}
		billingAddressString = (string.Join(",", address.Select(x => x.ToString()).ToArray())).Trim(',').Replace(",", ", ");
	}
	else
	{
		billingAddressString = GetDeliveryAddressString();
	}
}

@if (!string.IsNullOrEmpty(billingAddressString) && ((summaryBillingIsStandardSwiftTemplates && billingFieldCount > 1) || !summaryBillingIsStandardSwiftTemplates))
{
	<div class="list-group-item py-2 fs-7" style="background-color: rgba(var(--swift-foreground-color-rgb), 0.05)">
		<dl class="grid gap-1 gap-sm-3 mb-0">
			<dt class="g-col-8 g-col-sm-4 fw-normal">@Translate("Selected address")</dt>
			<dd class="g-col-12 g-col-sm-7 order-2 order-sm-1 mb-0">@billingAddressString</dd>

			@if (!billingHideEditBillingAddress)
			{
				<dd class="g-col-4 g-col-sm-1 order-1 order-sm-2 mb-0 text-end">
					<button class="btn btn-small btn-link fs-8 p-0" type="submit" name="CartV2.GotoStep0" id="EditDeliveryAddressButton">
						<span class="text-uppercase">@Translate("Edit")</span>
					</button>
				</dd>
			}
		</dl>
	</div>
}
