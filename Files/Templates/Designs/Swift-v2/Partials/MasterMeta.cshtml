@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using Dynamicweb.Frontend
@{
    //Verification Tokens
    Pageview.Meta.AddTag("fb:app_id", Model.Area?.Item?.GetString("Fb_app_id"));
    Pageview.Meta.AddTag("og:type", Model.Area?.Item?.GetString("Open_Graph_Type"));
    Pageview.Meta.AddTag("google-site-verification", Model.Area?.Item?.GetString("Google_Site_Verification"));
    Pageview.Meta.AddTag("url", Pageview.Meta.Canonical?.ToString());
    Pageview.Meta.AddTag("site_name", Model.Area?.Item?.GetString("Open_Graph_Site_Name"));
    Pageview.Meta.AddTag("og:name", Model.Area?.Name);
    Pageview.Meta.AddTag("og:title", Model.Area?.Item?.GetString("Open_Graph_Title"));
    Pageview.Meta.AddTag("description", Model.Area?.Item?.GetString("Open_Graph_Description"));
    Pageview.Meta.AddTag("image", Model.Area?.Item?.GetFile("Open_Graph_Image")?.Path);
    Pageview.Meta.AddTag("image:alt", Model.Area?.Item?.GetString("Open_Graph_Image_ALT"));

    Pageview.Meta.AddTag("twitter:site", Model.Area?.Item?.GetString("Twitter_Site"));
    Pageview.Meta.AddTag("twitter:url", Model.Area?.Item?.GetString("Twitter_URL"));
    Pageview.Meta.AddTag("twitter:title", Model.Area?.Item?.GetString("Twitter_Title"));
    Pageview.Meta.AddTag("twitter:description", Model.Area?.Item?.GetString("Twitter_Description"));
    Pageview.Meta.AddTag("twitter:image", Model.Area?.Item?.GetFile("Twitter_Image")?.Path);
    Pageview.Meta.AddTag("twitter:image:alt", Model.Area?.Item?.GetString("Twitter_Image_ALT"));
} 

@* old implementation - inspiration *@
@functions {
	void SetMetaTags()
	{
		//Verification Tokens
		string siteVerificationGoogle = Model.Area.Item.GetString("Google_Site_Verification") != null ? Model.Area.Item.GetString("Google_Site_Verification") : "";

		//Generic Site Values
		string openGraphFacebookAppID = Model.Area.Item.GetString("Fb_app_id") != null ? Model.Area.Item.GetString("Fb_app_id") : "";
		string openGraphType = Model.Area.Item.GetString("Open_Graph_Type") != null ? Model.Area.Item.GetString("Open_Graph_Type") : "";
		string openGraphSiteName = Model.Area.Item.GetString("Open_Graph_Site_Name") != null ? Model.Area.Item.GetString("Open_Graph_Site_Name") : "";

		string twitterCardSite = Model.Area.Item.GetString("Twitter_Site") != null ? Model.Area.Item.GetString("Twitter_Site") : "";

		//Page specific values
		string openGraphSiteTitle = Model.Area.Item.GetString("Open_Graph_Title") != null ? Model.Area.Item.GetString("Open_Graph_Title") : "";
		FileViewModel openGraphImage = Model.Area.Item.GetFile("Open_Graph_Image");
		string openGraphImageALT = Model.Area.Item.GetString("Open_Graph_Image_ALT") != null ? Model.Area.Item.GetString("Open_Graph_Image_ALT") : "";
		string openGraphDescription = Model.Area.Item.GetString("Open_Graph_Description") != null ? Model.Area.Item.GetString("Open_Graph_Description") : "";

		string twitterCardURL = Model.Area.Item.GetString("Twitter_URL") != null ? Model.Area.Item.GetString("Twitter_URL") : "";
		string twitterCardTitle = Model.Area.Item.GetString("Twitter_Title") != null ? Model.Area.Item.GetString("Twitter_Title") : "";
		string twitterCardDescription = Model.Area.Item.GetString("Twitter_Description") != null ? Model.Area.Item.GetString("Twitter_Description") : "";
		FileViewModel twitterCardImage = Model.Area.Item.GetFile("Twitter_Image");
		string twitterCardImageALT = Model.Area.Item.GetString("Twitter_Image_ALT") != null ? Model.Area.Item.GetString("Twitter_Image_ALT") : "";
		string topImage = Pageview.Page.TopImage.StartsWith("/Files", StringComparison.OrdinalIgnoreCase) ? Pageview.Page.TopImage : $"/Files{Pageview.Page.TopImage}";

		if (string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString["ProductID"]))
		{
			if (!string.IsNullOrEmpty(Model.Description))
			{
				Pageview.Meta.AddTag($"<meta property=\"og:description\" content=\"{Model.Description}\">");
			}
			else
			{
				Pageview.Meta.AddTag($"<meta property=\"og:description\" content=\"{openGraphDescription}\">");
			}

			if (!string.IsNullOrEmpty(Pageview.Page.TopImage))
			{
				Pageview.Meta.AddTag($"<meta property=\"og:image\" content=\"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{topImage}\">");
				Pageview.Meta.AddTag($"<meta property=\"og:image:secure_url\" content=\"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{topImage}\">");
			}
			else if (openGraphImage != null)
			{
				Pageview.Meta.AddTag($"<meta property=\"og:image\" content=\"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{openGraphImage.Path}\">");
				Pageview.Meta.AddTag($"<meta property=\"og:image:secure_url\" content=\"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{openGraphImage.Path}\">");
			}

			if (!string.IsNullOrEmpty(openGraphImageALT))
			{
				Pageview.Meta.AddTag($"<meta property=\"og:image:alt\" content=\"{openGraphImageALT}\">");
			}
			if (!string.IsNullOrEmpty(twitterCardDescription))
			{
				Pageview.Meta.AddTag("twitter:description", twitterCardDescription);
			}

			if (!string.IsNullOrEmpty(Pageview.Page.TopImage))
			{
				Pageview.Meta.AddTag("twitter:image", $"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{topImage}");
			}
			else if (twitterCardImage != null)
			{
				Pageview.Meta.AddTag("twitter:image", $"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{openGraphImage.Path}");
			}

			if (!string.IsNullOrEmpty(twitterCardImageALT))
			{
				Pageview.Meta.AddTag("twitter:image:alt", twitterCardImageALT);
			}
		}

		if (!string.IsNullOrEmpty(siteVerificationGoogle))
		{
			Pageview.Meta.AddTag("google-site-verification", siteVerificationGoogle);
		}

		if (!string.IsNullOrEmpty(openGraphFacebookAppID))
		{
			Pageview.Meta.AddTag($"<meta property=\"fb:app_id\" content=\"{openGraphFacebookAppID}\">");
		}

		if (!string.IsNullOrEmpty(openGraphType))
		{
			Pageview.Meta.AddTag($"<meta property=\"og:type\" content=\"{openGraphType}\">");
		}

		if (!string.IsNullOrEmpty(openGraphSiteName))
		{
			Pageview.Meta.AddTag($"<meta property=\"og:url\" content=\"{Dynamicweb.Context.Current.Request.Url.Scheme}://{Dynamicweb.Context.Current.Request.Url.Host}{Pageview.SearchFriendlyUrl}\">");
		}

		if (!string.IsNullOrEmpty(openGraphSiteName))
		{
			Pageview.Meta.AddTag($"<meta property=\"og:site_name\" content=\"{openGraphSiteName}\">");
		}

		if (!string.IsNullOrEmpty(Model.Title))
		{
			Pageview.Meta.AddTag($"<meta property=\"og:title\" content=\"{Model.Title}\">");
		}
		else
		{
			Pageview.Meta.AddTag($"<meta property=\"og:title\" content=\"{openGraphSiteTitle}\">");
		}

		if (!string.IsNullOrEmpty(twitterCardSite))
		{
			Pageview.Meta.AddTag("twitter:site", twitterCardSite);
		}

		if (!string.IsNullOrEmpty(twitterCardURL))
		{
			Pageview.Meta.AddTag("twitter:url", twitterCardURL);
		}

		if (!string.IsNullOrEmpty(twitterCardTitle))
		{
			Pageview.Meta.AddTag("twitter:title", twitterCardTitle);
		}
	}
}