@inherits ViewModelTemplate<ProductViewModel>
@using Dynamicweb.Ecommerce.CustomerExperienceCenter.Favorites
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
	bool isLazyLoadingForProductInfoEnabled = Dynamicweb.Core.Converter.ToBoolean(Dynamicweb.Context.Current.Items["IsLazyLoadingForProductInfoEnabled"]);
	
	string showPricesWithVat = Pageview.Area.EcomPricesWithVat.ToLower();
	bool neverShowVat = string.IsNullOrEmpty(showPricesWithVat);

	string price = string.Empty;
	string priceMin = string.Empty;
	string priceMax = string.Empty;

	if (showPricesWithVat == "false" && !neverShowVat) {
		price = Model.Price.PriceWithoutVatFormatted;
		if (Model?.VariantInfo?.VariantInfo != null)
		{
			priceMin = Model?.VariantInfo?.PriceMin?.PriceWithoutVatFormatted != null ? Model.VariantInfo.PriceMin.PriceWithoutVatFormatted : string.Empty;
			priceMax = Model?.VariantInfo?.PriceMax?.PriceWithoutVatFormatted != null ? Model.VariantInfo.PriceMax.PriceWithoutVatFormatted : string.Empty;
		}
	} else {
		price = Model.Price.PriceFormatted;
		if (Model?.VariantInfo?.VariantInfo != null)
		{
			priceMin = Model?.VariantInfo?.PriceMin?.PriceFormatted != null ? Model.VariantInfo.PriceMin.PriceFormatted : string.Empty;
			priceMax = Model?.VariantInfo?.PriceMax?.PriceFormatted != null ? Model.VariantInfo.PriceMax.PriceFormatted : string.Empty;
		}
	}
	price = priceMin != priceMax ? price = priceMin + " - " + priceMax : price;

	string priceInclVat = Model.Price.PriceWithVatFormatted;
	if (Model?.VariantInfo?.VariantInfo != null)
	{
		priceMin = Model?.VariantInfo?.PriceMin?.PriceWithVatFormatted != null ? Model.VariantInfo.PriceMin.PriceWithVatFormatted : string.Empty;
		priceMax = Model?.VariantInfo?.PriceMax?.PriceWithVatFormatted != null ? Model.VariantInfo.PriceMax.PriceWithVatFormatted : string.Empty;
		priceInclVat = priceMin != priceMax ? price = priceMin + " - " + priceMax : priceInclVat;
	}
}


<div class="d-flex flex-wrap justify-content-end gap-2">
	<span itemprop="priceCurrency" content="@Model.Price.CurrencyCode" class="d-none"></span>

	@if (showPricesWithVat == "false" && !neverShowVat)
	{
		if (isLazyLoadingForProductInfoEnabled)
		{
			<span itemprop="price" content="" class="d-none"></span>
			<span class="text-decoration-line-through js-text-decoration-line-through opacity-75 text-price js-text-price d-none" data-show-if="LiveProductInfo.product.Price.Price != LiveProductInfo.product.PriceBeforeDiscount.Price"></span>
			<span class="text-price js-text-price"><div class="spinner-border" role="status"></div></span>
		}
		else
		{
			<span itemprop="price" content="@Model.Price.PriceWithoutVat" class="d-none"></span>
			if (Model.Price.Price != Model.PriceBeforeDiscount.Price)
			{
				string beforePrice = Model.PriceBeforeDiscount.PriceWithoutVatFormatted;
				<span class="text-decoration-line-through opacity-75 text-price">@beforePrice</span>
			}
			<span class="text-price">@price</span>
		}
	}
	else
	{
		if (isLazyLoadingForProductInfoEnabled)
		{
			<span itemprop="price" content="" class="d-none"></span>
			<span class="text-decoration-line-through js-text-decoration-line-through opacity-75 text-price js-text-price d-none" data-show-if="LiveProductInfo.product.Price.Price != LiveProductInfo.product.PriceBeforeDiscount.Price"></span>
			<span class="text-price js-text-price"><div class="spinner-border" role="status"></div></span>
		}
		else
		{
			<span itemprop="price" content="@Model.Price.Price" class="d-none"></span>
			if (Model.Price.Price != Model.PriceBeforeDiscount.Price)
			{
				string beforePrice = Model.PriceBeforeDiscount.PriceFormatted;
				<span class="text-decoration-line-through opacity-75 text-price">@beforePrice</span>
			}
			<span class="text-price">@price</span>
		}
	}
</div>

@if (showPricesWithVat == "false" && !neverShowVat)
{
	if (isLazyLoadingForProductInfoEnabled)
	{
		<div class="fs-7 opacity-85 text-price js-text-price-with-vat d-none" data-suffix="@Translate("Incl. VAT")"></div>
	}
	else
	{
		<div class="fs-7 opacity-85 text-price">@priceInclVat @Translate("Incl. VAT")</div>
	}
}
