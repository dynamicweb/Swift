@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Environment

@{ 
	string apiKey = !string.IsNullOrEmpty(Pageview.AreaSettings.GetString("Google_APIKey")) ? Pageview.AreaSettings.GetString("Google_APIKey") : "";

	string pageId = GetGlobalValue("Global:Page.ID");
	string settingsType = Dynamicweb.Context.Current.Request.GetString("SettingsType");
	string goBackToPage = Dynamicweb.Context.Current.Request.GetString("GoBackToPage");
	string invalidOldPassword = !string.IsNullOrEmpty(GetString("UserManagement:User.OldPassword.Input.Error")) ? "is-invalid" : "";
	string invalidPassword = !string.IsNullOrEmpty(GetString("UserManagement:User.NewPassword.Input.Error")) ? "is-invalid" : "";
	string invalidConfirmPassword = !string.IsNullOrEmpty(GetString("UserManagement:User.NewPasswordConfirm.Input.Error")) ? "is-invalid" : "";
	string currentCountry = !string.IsNullOrEmpty(GetString("UserManagement:User.CountryCode")) ? GetString("UserManagement:User.CountryCode") : Pageview.Area.EcomCountryCode;
	var regions = Dynamicweb.Ecommerce.Services.Countries.GetRegions(currentCountry);
	string countrySelectorColumnSize = "g-col-12 g-col-lg-6";
	string regionLabel = "State";
	
	bool isStandardSwiftTemplates = Pageview.AreaSettings.GetString("AddressFieldsBasedOn", "swift") == "swift";
	bool isImpersonating = Dynamicweb.Security.UserManagement.User.GetCurrentSecondaryUser() != null;
	bool isExternalAuthentication = !string.IsNullOrEmpty(Dynamicweb.Core.Converter.ToString(Dynamicweb.Context.Current.Session["DW_extranet_ExternalLoginProviderID"]));
}

@GetString("UserManagement:User.FormStart").Replace("<form", "<form novalidate id='UserManagementEditForm'")
@if (settingsType == "profile" || settingsType == "")
{
	<header class="d-flex flex-row align-items-center gap-3 p-3 border-bottom">
		<h1 class="h6 m-0 flex-fill">@Translate("Edit profile")</h1>
		@if (!isImpersonating && !isExternalAuthentication)
		{
			<a href="/Default.aspx?ID=@pageId&SettingsType=changepassword" class="btn btn-link p-0">@Translate("Change password")</a>
		}
	</header>
}
else
{
	<header class="py-1">
		<h1 class="h6 m-0 p-3 border-bottom">@Translate("Change password")</h1>
	</header>
}

@if (settingsType == "profile" || settingsType == "")
{
	<div class="grid p-3">

		@foreach (LoopItem error in GetLoop("FormValidationErrors"))
		{
			<div class="alert alert-danger m-0" role="alert">
				@error.GetString("UserManagement:User.FormValidationError.Message")
			</div>
		}

		@{
        	if (isStandardSwiftTemplates)
        	{
				<div class="g-col-12">
					<div class="form-floating">
						<input type="text" class="form-control" placeholder="@Translate("Name")" name="UserManagement_Form_Name" id="UserManagement_Form_Name" value="@GetString("UserManagement:User.Name")">
						<label for="UserManagement_Form_Name" class="form-label">@Translate("Name")</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.Name.Input.Error")</div>
					</div>
				</div>
				<div class="g-col-12">
					<div class="form-floating">
						<input type="text" class="form-control" placeholder="@Translate("Company") (@Translate("optional"))" name="UserManagement_Form_Company" id="UserManagement_Form_Company" value="@GetString("UserManagement:User.Company")">
						<label for="UserManagement_Form_Company" class="form-label">@Translate("Company") (@Translate("optional"))</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.Company.Input.Error")</div>
					</div>
				</div>
				<div class="g-col-12">
					<div class="form-floating">
						<input type="text" class="form-control" placeholder="@Translate("Street & number")" name="UserManagement_Form_Address" id="UserManagement_Form_Address" value="@GetString("UserManagement:User.Address")" required />
						<label for="UserManagement_Form_Address" class="form-label">@Translate("Street & number")</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.Address.Input.Error")</div>
					</div>
				</div>
				<div class="g-col-12">
					<div class="form-floating">
				<input type="text" class="form-control" placeholder="@Translate("Additional address")" name="UserManagement_Form_Address2" id="UserManagement_Form_Address2" value="@GetString("UserManagement:User.Address2")" required />
						<label for="UserManagement_Form_Address2" class="form-label">@Translate("Additional address")</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.Address2.Input.Error")</div>
					</div>
				</div>
				<div class="g-col-12 g-col-lg-3">
					<div class="form-floating">
						<input type="text" class="form-control" placeholder="@Translate("Zip")" name="UserManagement_Form_Zip" id="UserManagement_Form_Zip" value="@GetString("UserManagement:User.Zip")" required />
						<label for="UserManagement_Form_Zip" class="form-label">@Translate("Zip")</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.Zip.Input.Error")</div>
					</div>
				</div>

				if (regions.Count > 0)
				{
					countrySelectorColumnSize = "g-col-12 g-col-lg-3";
				}

				<div class="@countrySelectorColumnSize">
					<div class="form-floating">
						<input type="text" class="form-control" placeholder="@Translate("Town / City")" name="UserManagement_Form_City" id="UserManagement_Form_City" value="@GetString("UserManagement:User.City")" required />
						<label for="UserManagement_Form_City" class="form-label">@Translate("Town / City")</label>
						<div class="invalid-feedback">@GetString("UserManagement:User.City.Input.Error")</div>
					</div>
				</div>


				if (regions.Count > 0)
				{
					if (currentCountry == "CA")
						{
						regionLabel = Translate("Province");
					}
					else if (currentCountry == "GB")
					{
						regionLabel = Translate("Region");
					}
					else if (currentCountry == "US")
					{
						regionLabel = Translate("State");
					}

					<div class="g-col-3">
						<div class="form-floating">
							@{
								string regionCode = GetString("UserManagement:User.State");

								<select class="form-select" name="UserManagement_Form_State" id="UserManagement_Form_State">
									@foreach (var region in regions)
									{
										string selected = region.RegionCode == regionCode ? "selected" : "";
								<option value="@region.RegionCode" @selected>@region.GetName(Dynamicweb.Ecommerce.Common.Context.LanguageID)</option>
									}
								</select>
							}
							<label for="UserManagement_Form_State">@regionLabel</label>
						</div>
					</div>
				} else { 
					<input type="hidden" name="UserManagement_Form_State" id="UserManagement_Form_State" value=""></input>
				}

				<div class="g-col-12 g-col-lg-3">
					<div class="form-floating">
						@{
							<select class="form-select" id="UserManagement_Form_CountryCode" name="UserManagement_Form_CountryCode" onchange="submitForm()">
								@foreach (LoopItem country in GetLoop("UserManagement.CountryList"))
								{
							string selected = country.GetString("Country.Code2") == currentCountry ? "selected" : "";

									<option value="@country.GetString("Country.Code2")" @selected>@country.GetString("Country.Name")</option>
								}
							</select>
						}
						<label for="UserManagement_Form_CountryCode" class="form-label">@Translate("Country")</label>
					</div>
				</div>
        	}
        	else
        	{
				@RenderUserProfileEdit()
        	}
        }
		
		<div class="g-col-12 g-col-lg-6">
			<div class="form-floating">
				<input type="email" class="form-control" placeholder="@Translate("Email")" name="UserManagement_Form_Email" id="UserManagement_Form_Email" value="@GetString("UserManagement:User.Email")" required />
				<label for="UserManagement_Form_Email" class="form-label">@Translate("Email")</label>
				<div class="invalid-feedback">@GetString("UserManagement:User.Email.Input.Error")</div>
			</div>
		</div>
		<div class="g-col-12 g-col-lg-6">
			<div class="form-floating">
				<input type="text" class="form-control" placeholder="@Translate("Phone")" name="UserManagement_Form_Phone" id="UserManagement_Form_Phone" value="@GetString("UserManagement:User.Phone")">
				<label for="UserManagement_Form_Phone" class="form-label">@Translate("Phone")</label>
				<div class="invalid-feedback">@GetString("UserManagement:User.Phone.Input.Error")</div>
			</div>
		</div>

		<div class="g-col-12">
			<button type="submit" class="btn btn-primary me-2" id="UpdateProfileButton">@Translate("Update")</button>
			@if (!string.IsNullOrEmpty(goBackToPage))
			{
				<a href="/Default.aspx?ID=@goBackToPage" class="btn btn-secondary" id="BackToCheckoutButtonButton">@Translate("Go back to checkout")</a>
			}
		</div>

	</div>
}
else
{
	<div class="grid gap-3 p-3">

		<div class="g-col-12">
			@foreach (LoopItem error in GetLoop("FormValidationErrors"))
			{
				<div class="alert alert-danger" role="alert">
					@error.GetString("UserManagement:User.FormValidationError.Message")
				</div>
			}
		</div>

		<div class="g-col-12">
			<div class="form-floating">
				<input type="password" class="form-control @invalidOldPassword" id="UserManagement_Form_OldPassword" name="UserManagement_Form_OldPassword" placeholder="@Translate("Old password")" required>
				<label for="UserManagement_Form_OldPassword">@Translate("Current password")</label>
				<div class="invalid-feedback">@GetString("UserManagement:User.OldPassword.Input.Error")</div>
			</div>
		</div>

		<div class="g-col-12">
			<div class="form-floating">
				<input type="password" class="form-control @invalidPassword" id="UserManagement_Form_NewPassword" name="UserManagement_Form_NewPassword" placeholder="@Translate("Old password")" required>
				<label for="UserManagement_Form_NewPassword">@Translate("New password")</label>
				<div class="invalid-feedback">@GetString("UserManagement:User.NewPassword.Input.Error")</div>
			</div>
		</div>

		<div class="g-col-12">
			<div class="form-floating">
				<input type="password" class="form-control @invalidConfirmPassword" id="UserManagement_Form_NewPasswordConfirm" name="UserManagement_Form_NewPasswordConfirm" placeholder="@Translate("Old password")" required>
				<label for="UserManagement_Form_NewPasswordConfirm">@Translate("Confirm new password")</label>
				<div class="invalid-feedback">@GetString("UserManagement:User.NewPasswordConfirm.Input.Error")</div>
			</div>
		</div>

		<div class="g-col-12">
			<button type="submit" class="btn btn-primary" id="UpdatePasswordButton">@Translate("Update password")</button>
		</div>

	</div>
}

<input type="hidden" name="ID" value="@pageId">
@GetString("UserManagement:User.FormEnd")

@Include("../Helpers/UserProfileEditFormatted.cshtml")

<script>
	function submitForm() {
		var form = document.querySelector("#UserManagementEditForm");
		form.requestSubmit();
	}
</script>

@if (!string.IsNullOrEmpty(apiKey))
{
	<script defer src="https://maps.googleapis.com/maps/api/js?key=@(apiKey)&libraries=places"></script>

	<script type="module">
		var mapSettings = { currentCountry: "@currentCountry" };
		swift.Places.init(mapSettings);
	</script>
}
