@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Ecommerce.Orders

@{ 
	string voucherCode = GetString("Ecom:Order.Customer.VoucherCode");
	string voucherCodeError = GetString("Ecom:Cart.ValidationError.EcomOrderVoucherCode.ErrorMessage");
	string validState = string.Empty;
	bool vouchersAppliedAsDiscounts = false;

	IEnumerable<string> voucherCodes = new List<string>();
	Order order = new OrderService().GetById(GetString("Ecom:Order.ID"));


	if (!string.IsNullOrWhiteSpace(voucherCode))
	{
		if (order.VoucherUseType.HasFlag(VoucherUseCategoryType.Discount))
		{
			voucherCodes = voucherCode.Split(new string[] { ",", ";", " " }, StringSplitOptions.RemoveEmptyEntries);
			vouchersAppliedAsDiscounts = true;
		}
		else
		{
			voucherCodes = new string[] { voucherCode.Trim() };
		}
    }
		
	var voucherErrors = new List<string>();
	if(!vouchersAppliedAsDiscounts)
    {
		foreach (string code in voucherCodes)
		{
			Dynamicweb.Ecommerce.Orders.Vouchers.Voucher vouch = Dynamicweb.Ecommerce.Services.Vouchers.GetVoucherByCode(code);
			if (vouch == null)
			{
				validState = "is-invalid";
				voucherErrors.Add(Translate("Voucher") + " <span class='fw-bold'>" + code + "</span> " + Translate("not found"));
				continue;
			}
			if (vouch.DateUsed.HasValue)
			{
				validState = "is-invalid";
				voucherErrors.Add(Translate("Voucher") + " <span class='fw-bold'>" + code + "</span> " + Translate("already used"));
				continue;
			}
		}
	}

	var voucherErrorMessage = string.Join(",", voucherErrors);

<div class="py-3 border-top" id="orderVoucherForm">
	<form method="post" id="VoucherForm">
		<div class="input-group input-primary-button-group has-validation">
			<input type="text" class="form-control @(validState)" name="EcomOrderVoucherCodeField" placeholder="@Translate("Add voucher here")" id="EcomOrderVoucherCodeField" value="" aria-label="@Translate("Voucher input")" oninput="document.querySelector('#EcomOrderVoucherCode').value = this.value;" onkeyup="document.querySelector('#EcomOrderVoucherCode').value = this.value;">
			<button class="btn btn-sm btn-primary d-inline-flex align-items-center justify-content-center" type="submit" id="EcomOrderVoucherApply" style="min-width: 100px;">
				<span>@Translate("Apply")</span>
			</button>

				<div class="invalid-feedback">
					@voucherErrorMessage
				</div>
			</div>
			<input type="hidden" name="EcomOrderVoucherCode" id="EcomOrderVoucherCode" value="@voucherCode">
			<label for="EcomOrderVoucherCodeField" class="visually-hidden">@Translate("Add voucher here")</label>
		</form>
		
	@if (!string.IsNullOrWhiteSpace(voucherCode) && vouchersAppliedAsDiscounts)
	{
		<div class="d-flex flex-wrap gap-2 pt-3">

				@foreach (string code in voucherCodes)
				{
				<form method="post">
					<input type="hidden" name="EcomOrderVoucherCode" value="@voucherCode.Replace(code+",", "").Replace(","+code, "").Replace(code, "")">
					<span class="badge fw-normal d-inline-flex align-items-center justify-content-center opacity-50 opacity-100-hover" style="background-color:var(--swift-foreground-color);color:var(--swift-background-color);">
						<span class="icon-2">
							@ReadFile("/Files/Templates/Designs/Swift/Assets/icons/tag.svg")
						</span>
						<span class="mx-2">@code</span>
						<button type="submit" class="text-reset bg-transparent border-0 p-0" aria-label="@Translate("Remove voucher")" id="RemoveVoucherButton">
							<span class="icon-2">
								@ReadFile("/Files/Templates/Designs/Swift/Assets/icons/x.svg")
							</span>
						</button>
					</span>
				</form>
				}
			</div>
		}
		@voucherCodeError
	</div>
}
