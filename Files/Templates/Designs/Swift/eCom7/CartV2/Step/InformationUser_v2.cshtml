@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@{
	List<string> addressList = new List<string>();
	if (!string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
	{
		addressList.Add(GetString("UserManagement:User.Address"));
	}
	if (!string.IsNullOrEmpty(GetString("UserManagement:User.Zip")))
	{
		addressList.Add(GetString("UserManagement:User.Zip"));
	}
	if (!string.IsNullOrEmpty(GetString("UserManagement:User.City")))
	{
		addressList.Add(GetString("UserManagement:User.City"));
	}
	string addressString = (string.Join(",", addressList.Select(x => x.ToString()).ToArray()));
	var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
	string theme = !string.IsNullOrEmpty(themeRaw) ? " theme " + themeRaw.Replace(" ", "").Trim().ToLower() : "";
}

<div class="grid gap-0 h-100">
	<div class="g-col-12 g-col-lg-8 p-3 p-lg-4 pe-xl-5 ps-xl-6 ps-xxl-8 order-last order-lg-first@(theme)">
		<form name="ordersubmit" id="ordersubmit" method="post" autocomplete="off" style="max-width: 65rem; margin-left: auto;">

			@Include("Helpers/Logo.cshtml")

			@Include("Helpers/StepsBreadcrumbs.cshtml")

			@Include("Helpers/Errors.cshtml")

			@Include("Shared/Helpers/StepSummary_v2.cshtml")

			<input type="hidden" id="CurrentStep">

			@Include("Shared/Helpers/AddressUser_v2.cshtml")

			@if (!string.IsNullOrWhiteSpace(addressString))
			{
				<text>
					@Include("Helpers/StepsNavigation.cshtml")
				</text>
			}
		</form>
	</div>

	@Include("Helpers/SummarySidebar.cshtml")

</div>

<script>
	function submitForm() {
		document.querySelector("#CurrentStep").name = "@GetString("CartV2.CurrentStepButtonName")";
		swift.PageUpdater.Update(document.querySelector("#ordersubmit"));
	}
</script>

<script>
	gtag("event", "begin_checkout", {
		currency: "@GetString("Ecom:Order.CurrencyCode")",
		value: @GetDouble("Ecom:Order.Price.Price.Value").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture),
		items: [
			@foreach (LoopItem orderline in GetLoop("OrderLines")) {
				<text>
				{
					item_id: "@orderline.GetString("Ecom:Order:OrderLine.ProductID")",
					item_name: "@orderline.GetString("Ecom:Order:OrderLine.ProductName")",
					currency: "@orderline.GetString("Ecom:Order:OrderLine.UnitPrice.CurrencyCode")",
					price: @orderline.GetDouble("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.Price.Value").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture),
					quantity: @orderline.GetDouble("Ecom:Order:OrderLine.Quantity").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)
				},
				</text>
			}
		]
	});
</script>

@* Address format helper methods *@
@Include("../Helpers/DeliveryAddressDisplayFormatted.cshtml")
@Include("../Helpers/UserAddressDisplayFormatted.cshtml")
