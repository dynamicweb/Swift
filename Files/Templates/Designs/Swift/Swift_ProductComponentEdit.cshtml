@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System
@using Dynamicweb.Ecommerce.ProductCatalog
@MasterPageFile("Swift_MasterNoLayout.cshtml")

@{ 
	bool isVisualEditor = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) : false;
	string theme = "";
	string contentPadding = "";
	string gridContent = "";

	if (Model.PropertyItem != null)
	{
		theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : string.Empty;

		contentPadding = Model.Item.GetRawValueString("ContentPadding", "");
		contentPadding = contentPadding == "none" ? "p-0" : contentPadding;
		contentPadding = contentPadding == "small" ? "p-2 p-md-3" : contentPadding;
		contentPadding = contentPadding == "large" ? "p-4 p-md-5" : contentPadding;
		contentPadding = contentPadding == "small-x" ? "px-2 px-md-3" : contentPadding;
		contentPadding = contentPadding == "large-x" ? "px-4 px-md-5" : contentPadding;
	}

	if (Model.Item != null)
	{
		gridContent = Model.Grid("Grid", "Grid", "default:true;sort:1", "Page");
	}

	string viewType = Model.Item.GetRawValueString("ViewType", "3-columns");
	string viewTypeMobile = Model.Item.GetRawValueString("ViewTypeMobile", "2-columns");
	string mobileColumns = viewTypeMobile == "list" ? "g-col-12" : "";
	mobileColumns = viewTypeMobile == "2-columns" ? "g-col-6" : mobileColumns;

	<div class="bg-light w-100 position-relative">
		<div class="p-5 position-fixed" style="z-index: 10">
			<h3 class="h5">@Translate("Component builder for"): @Model.Item.GetString("Title")</h3>
		</div>
		<div class="container-xl d-flex flex-row align-items-center justify-content-center min-vh-100">
			<div class="grid w-100">
				@if (viewType == "list")
				{
					<div class="@mobileColumns g-col-lg-12 shadow @contentPadding @theme p-2">
						@gridContent
					</div>
				}
				@if (viewType == "2-columns")
				{
					<div class="@mobileColumns g-col-lg-6 shadow @contentPadding @theme p-2">
						@gridContent
					</div>
					<div class="@mobileColumns g-col-lg-6 bg-black" style="opacity: 10%"></div>
				}
				@if (viewType == "3-columns")
				{
					<div class="@mobileColumns g-col-lg-4 shadow @contentPadding @theme p-2">
						@gridContent
					</div>
					<div class="@mobileColumns g-col-lg-4 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-4 bg-black" style="opacity: 10%"></div>
				}
				@if (viewType == "4-columns")
				{
					<div class="@mobileColumns g-col-lg-3 shadow @contentPadding @theme p-2">
						@gridContent
					</div>
					<div class="@mobileColumns g-col-lg-3 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-3 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-3 bg-black" style="opacity: 10%"></div>
				}
				@if (viewType == "6-columns")
				{
					<div class="@mobileColumns g-col-lg-2 shadow @contentPadding @theme p-2">
						@gridContent
					</div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
					<div class="@mobileColumns g-col-lg-2 bg-black" style="opacity: 10%"></div>
				}
			</div>
		</div>
	</div>
}

<script>
	document.querySelector('#VisualEditoForcedTopHeight').style.height = 0;
</script>
