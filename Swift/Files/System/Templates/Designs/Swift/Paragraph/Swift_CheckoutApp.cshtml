@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb
@using Dynamicweb.Frontend
@{ 
	string contentPadding = Model.Item?.GetRawValueString("contentPadding") != null ? Model.Item.GetRawValueString("contentPadding") : "";
	string moduleOutput = Model.GetModuleOutput();

	if (Dynamicweb.Context.Current.Items.Contains("Cart"))
	{
		Dynamicweb.Context.Current.Items["Cart"] = Model;
	}
	else
	{
		Dynamicweb.Context.Current.Items.Add("Cart", Model);
	}

	bool isErpConnectionDown = !Dynamicweb.Core.Converter.ToBoolean(Dynamicweb.Context.Current.Items["IsWebServiceConnectionAvailable"]);
	string erpDownCartBehavior = Pageview.AreaSettings.GetRawValueString("ErpDownCartBehavior", "none");

	if (isErpConnectionDown && erpDownCartBehavior.Equals("redirect"))
	{
		string redirectLink = Dynamicweb.Core.Converter.ToString(Pageview.AreaSettings.GetLink("ErpDownRedirectPageLink")?.Url ?? string.Empty);
		if (string.IsNullOrEmpty(redirectLink))
		{
			redirectLink = "/";
		}
		Dynamicweb.Context.Current.Response.Redirect(redirectLink);
	}
}

@if (Pageview.IsVisualEditorMode && !string.IsNullOrEmpty(moduleOutput)) {
    <div class="alert alert-info" role="alert">
        <span>@Translate("App: Edit this column to configure")</span>
    </div>
}

<div class="@(contentPadding) min-vh-lg-100 h-lg-100 item_@Model.Item.SystemName.ToLower()">
	@moduleOutput
</div>
