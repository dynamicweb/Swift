@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>


@{
	var billingHideEditBillingAddress = Pageview.CurrentParagraph?.Item["HideEditBillingAddress"] != null ? Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideEditBillingAddress"].ToString()) : false;

	int billingFieldCount = 0; //Helps us render addresses that contains more than just the auto set country
	List<string> address = new List<string>();
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Company")))
	{
		address.Add(GetString("Ecom:Order.Customer.Company"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Name")))
	{
		address.Add(GetString("Ecom:Order.Customer.Name"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Address")))
	{
		address.Add(GetString("Ecom:Order.Customer.Address"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Address2")))
	{
		address.Add(GetString("Ecom:Order.Customer.Address2"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Zip")))
	{
		address.Add(GetString("Ecom:Order.Customer.Zip"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.City")))
	{
		address.Add(GetString("Ecom:Order.Customer.City"));
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Region")))
	{
		string regionName = GetString("Ecom:Order.Customer.Region");
		foreach (LoopItem region in GetLoop("CustomerRegions"))
		{
			if (region.GetString("Ecom:CustomerRegion.IsCustomerRegion") == "true")
			{
				regionName = region.GetString("Ecom:CustomerRegion.Name");
			}
		}

		address.Add(regionName);
		billingFieldCount++;
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Country")))
	{
		address.Add(GetString("Ecom:Order.Customer.Country"));
		billingFieldCount++;
	}
	string billingAddressString = (string.Join(",", address.Select(x => x.ToString()).ToArray())).Trim(',').Replace(",", ", ");

	if (!string.IsNullOrEmpty(billingAddressString) && billingFieldCount > 1)
	{
		<div class="list-group-item py-2 fs-7" style="background-color:rgba(var(--swift-foreground-color-rgb), 0.05)">
			<dl class="grid gap-1 gap-sm-3 mb-0">
				<dt class="g-col-8 g-col-sm-4 fw-normal">@Translate("Billing")</dt>
				<dd class="g-col-12 g-col-sm-7 order-2 order-sm-1 mb-0">@billingAddressString</dd>

				@if (!billingHideEditBillingAddress)
				{
					<dd class="g-col-4 g-col-sm-1 order-1 order-sm-2 mb-0 text-end">
						<button class="btn btn-small btn-link fs-8 p-0" type="submit" name="CartV2.GotoStep0" id="EditCustomerAddressButton">
							<span class="text-uppercase">@Translate("Edit")</span>
						</button>
					</dd>
				}
			</dl>
		</div>
	}
}
