@inherits ViewModelTemplate<ProductListViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Ecommerce.CustomerExperienceCenter.Favorites

@functions {
	Dictionary<string, object> favoriteParameters { get; set; }
}

@{
	int parentColumnSize = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("ParentColumnSize")) ? Convert.ToInt32(Dynamicweb.Context.Current.Request.Form.Get("ParentColumnSize")) : 12;
	string link = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("Link")) ? Dynamicweb.Context.Current.Request.Form.Get("Link") : string.Empty;
	string linkText = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("LinkText")) ? Dynamicweb.Context.Current.Request.Form.Get("LinkText") : string.Empty;
	string layoutSetting = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("Layout")) ? Dynamicweb.Context.Current.Request.Form.Get("Layout") : string.Empty;
	bool hideTitle = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("HideTitle")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.Form.Get("HideTitle")) : false;
	layoutSetting = hideTitle && layoutSetting != "grid" ? "text-top" : layoutSetting;
	int totalProducts = Model.TotalProductsCount;
	int pageSize = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("PageSize")) ? Convert.ToInt32(Dynamicweb.Context.Current.Request.Form.Get("PageSize")) : 12;
	string buttonStyle = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("ButtonStyle")) ? Dynamicweb.Context.Current.Request.Form.Get("ButtonStyle") : "btn-primary";
	string headingTitle = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("HeadingTitle")) ? Dynamicweb.Context.Current.Request.Form.Get("HeadingTitle") : string.Empty;
	string headingSubtitle = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("Subtitle")) ? Dynamicweb.Context.Current.Request.Form.Get("Subtitle") : string.Empty;
	string titleFontSize = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("TitleFontSize")) ? Dynamicweb.Context.Current.Request.Form.Get("TitleFontSize") : "h3";
	string subtitleFontSize = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("SubtitleFontSize")) ? Dynamicweb.Context.Current.Request.Form.Get("SubtitleFontSize") : "fs-5";
	string maxWidth = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("TextReadability")) ? Dynamicweb.Context.Current.Request.Form.Get("TextReadability") : string.Empty;
	string generalTheme = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("GeneralTheme")) ? Dynamicweb.Context.Current.Request.Form.Get("GeneralTheme") : string.Empty;
	string ContentPadding = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.Form.Get("ContentPadding")) ? Dynamicweb.Context.Current.Request.Form.Get("ContentPadding") : string.Empty;
	string anonymousUsersLimitations = Pageview.AreaSettings.GetRawValueString("AnonymousUsers", string.Empty);
	bool anonymousUser = Pageview.User == null;

	favoriteParameters = new Dictionary<string, object>();
	if (!anonymousUser)
	{
		int defaultFavoriteListId = 0;

		IEnumerable<FavoriteList> favoreiteLists = Pageview.User.GetFavoriteLists();
		int favoriteListsTotal = favoreiteLists.Count();

		if (favoreiteLists.Count() == 1)
		{
			foreach (FavoriteList list in favoreiteLists)
			{
				defaultFavoriteListId = list.ListId;
			}
		}

		favoriteParameters.Add("ListId", defaultFavoriteListId);
		favoriteParameters.Add("ListTotal", favoriteListsTotal);
	}

	string columnSize = "g-col-lg-2";
	columnSize = parentColumnSize == 10 || parentColumnSize == 9 || parentColumnSize == 8 ? "g-col-lg-3" : columnSize;
	columnSize = parentColumnSize == 6 ? "g-col-lg-4" : columnSize;
	columnSize = parentColumnSize == 3 || parentColumnSize == 4 ? "g-col-lg-6" : columnSize;

	var sliderParameters = new Dictionary<string, object>();
	sliderParameters.Add("parentColumnSize", parentColumnSize);
	sliderParameters.Add("layoutSetting", layoutSetting);
	sliderParameters.Add("favoriteParameters", favoriteParameters);
}


@if (Model.Products.Any() || Pageview.IsVisualEditorMode)
{
	@*--- SLIDER: TEXT TOP ---*@
	if (layoutSetting == "" || layoutSetting == "text-top")
	{
		<div class="grid gap-0 h-100 @ContentPadding@(generalTheme)">
			@if (headingTitle != "" && !hideTitle)
			{
				<div class="g-col-12 pb-2 d-flex">
					<div class="flex-fill">
						@if (!string.IsNullOrEmpty(headingTitle))
						{
							<h2 class="@titleFontSize@(maxWidth)">@headingTitle</h2>
						}
						@if (!string.IsNullOrEmpty(headingSubtitle))
						{
							<p class="@subtitleFontSize mb-2 mb-md-3@(maxWidth)">@headingSubtitle</p>
						}
					</div>
					@if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
					{
						string marginTop = (headingTitle != "" || headingSubtitle != "") && layoutSetting != "" && layoutSetting != "text-top" ? " mt-4" : "";
						<div class="d-none d-lg-block">
							<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4">@linkText</a>
						</div>
					}
				</div>
			}

			<div class="g-col-12">
				@RenderPartial("eCom/ProductCatalog/ProductSliderStandard/Slider.cshtml", Model, sliderParameters)

				@if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
				{
					string marginTop = headingTitle != "" || headingSubtitle != "" ? " mt-4" : "";
					<div class="d-block d-lg-none">
						<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4 w-100">@linkText</a>
					</div>
				}
			</div>
		</div>
	}

	if (layoutSetting == "text-left" || layoutSetting == "text-right")
	{
		string sliderColSize = "g-col";
		string dataLayout = layoutSetting == "text-left" ? "left" : layoutSetting == "text-right" ? "right" : string.Empty;

		<div class="grid gap-0 gap-lg-5 h-100 @ContentPadding@(generalTheme)" data-slider-layout="@dataLayout">
			@if ((headingTitle != "" && !hideTitle) || headingSubtitle != "" || linkText != "")
			{
				sliderColSize = "g-col-12 g-col-lg-8";

				<div class="g-col-12 g-col-lg-4 @(layoutSetting == "text-right" ? "order-1 order-lg-2" : string.Empty)">
					<div class="d-flex flex-row h-100">
						<div class="mb-2 mb-lg-0">
							@if (!string.IsNullOrEmpty(headingTitle))
							{
								<h2 class="@titleFontSize@(maxWidth)">@headingTitle</h2>
							}
							@if (!string.IsNullOrEmpty(headingSubtitle))
							{
								<p class="@subtitleFontSize mb-2 mb-md-3@(maxWidth)">@headingSubtitle</p>
							}
							@if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
							{
								string marginTop = (headingTitle != "" || headingSubtitle != "") && layoutSetting != "" && layoutSetting != "text-top" ? " mt-4" : "";
								<div class="d-none d-lg-block">
									<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4">@linkText</a>
								</div>
							}
						</div>
					</div>
				</div>
			}
			<div class="@sliderColSize @(layoutSetting == "text-right" ? "order-2 order-lg-1" : string.Empty)">
				@RenderPartial("eCom/ProductCatalog/ProductSliderStandard/Slider.cshtml", Model, sliderParameters)
			</div>
		</div>

		if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
		{
			string marginTop = headingTitle != "" || headingSubtitle != "" ? " mt-4" : "";
			<div class="d-block d-lg-none">
				<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4 w-100">@linkText</a>
			</div>
		}
	}

	@*--- GRID ---*@
	if (layoutSetting == "grid")
	{
		<div class="h-100 @ContentPadding@(generalTheme)">
			@if (headingTitle != "" && !hideTitle)
			{
				<div class="pb-2 d-flex">
					<div class="flex-fill">
						@if (!string.IsNullOrEmpty(headingTitle))
						{
							<h2 class="@titleFontSize@(maxWidth)">@headingTitle</h2>
						}
						@if (!string.IsNullOrEmpty(headingSubtitle))
						{
							<p class="@subtitleFontSize mb-2 mb-md-3@(maxWidth)">@headingSubtitle</p>
						}
					</div>
				</div>
			}

			<div class="grid gap-3">
				@foreach (ProductViewModel product in Model.Products)
				{
					<div class="g-col-6 @columnSize position-relative">
						@RenderPartial("eCom/ProductCatalog/ProductSliderStandard/Product.cshtml", product, favoriteParameters)
					</div>
				}
			</div>

			<div class="text-center">
				@if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
				{
					string marginTop = (headingTitle != "" || headingSubtitle != "") && layoutSetting != "" && layoutSetting != "text-top" ? " mt-4" : "";
					<div class="d-none d-lg-block">
						<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4">@linkText</a>
					</div>
				}
			</div>

			@if (totalProducts > pageSize && !string.IsNullOrEmpty(link) && !string.IsNullOrEmpty(linkText))
			{
				string marginTop = headingTitle != "" || headingSubtitle != "" ? " mt-4" : "";
				<div class="d-block d-lg-none">
					<a href="@(link)" class="btn @(buttonStyle) @(marginTop) mb-4 w-100">@linkText</a>
				</div>
			}
		</div>
	}
}
