@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Frontend

@functions {
	private string GetFontStack()
	{
		return "font-family:initial,Arial,Helvetica Neue,Helvetica,sans-serif;";
	}

	private string GetTableReset()
	{
		return "border:0;margin:0;outline:0;padding:0;";
	}

	public Dynamicweb.Frontend.ColorViewModel GetMutedColor(string hex, int percent, double threshold = 0.5)
	{
		/// <summary>
		/// Return a color in either lighter or darker contrast based on the original color luminance.
		/// </summary>
		/// <param name="percent">The percent (1-100) to darken or light the color with - higher percentage will give higher contrast</param>
		/// <param name="threshold">The luminance threshold (0-1). Default is 0.5. 0 is black, 1 is white. Luminance threshold is used to decide wether the returned contrast color should be darker or lighter than the base color</param>
		/// <returns>A new color viewmodel with the contrasted color in either darker or lighter luminance compared to base color</returns>
		/// 
		if (threshold > 1)
			threshold = 1;
		if (threshold < 0)
			threshold = 0;

		var color = Dynamicweb.Imaging.Colors.Color.FromHex(hex);
		var luminance = (0.2126 * color.BaseColor.R) + (0.7152 * color.BaseColor.G) + (0.0722 * color.BaseColor.B);
		/// == luminance = 0 is black, luminance = 1 is white == //
		luminance = color.Brightness / 255;
		if (luminance < threshold)
		{
			return new Dynamicweb.Frontend.ColorViewModel() { Hex = color.Lighten(percent).ToHex() };
		}
		else
		{
			return new Dynamicweb.Frontend.ColorViewModel() { Hex = color.Darken(percent).ToHex() };
		}
	}
}

@{
	ParagraphViewModel currentParagraph = new ParagraphViewModel();
	if (Dynamicweb.Context.Current.Items.Contains("CurrentParagraph"))
	{
		currentParagraph = (ParagraphViewModel)Dynamicweb.Context.Current.Items["CurrentParagraph"];
	}

	int currentPageId = 0;
	if (Dynamicweb.Context.Current.Items.Contains("CurrentPageId"))
	{
		currentPageId = Convert.ToInt32(Dynamicweb.Context.Current.Items["CurrentPageId"]);
	}

	int currentGridRowId = 0;
	if (Dynamicweb.Context.Current.Items.Contains("CurrentGridRowId"))
	{
		currentGridRowId = Convert.ToInt32(Dynamicweb.Context.Current.Items["CurrentGridRowId"]);
	}

	if (currentPageId != 0 && currentGridRowId != 0) {

		var page = Dynamicweb.Content.Services.Pages.GetPage(currentPageId);
		var settings = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(page.Parent).Item;
		var blockId = currentParagraph.ID;
		var block = currentParagraph.Item;

		var emailContentThemeId = settings.GetRawValueString("EmailContentTheme");
		var emailContentThemeParagraph = emailContentThemeId != null && emailContentThemeId != string.Empty ? Dynamicweb.Content.Services.Paragraphs.GetParagraph(Dynamicweb.Core.Converter.ToInt32(emailContentThemeId)) : null;
		var emailContentTheme = emailContentThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailContentThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailContentThemeParagraph)?.Item : null;

		var rowId = currentGridRowId;
		var row = Dynamicweb.Content.Services.Grids.GetGridRowById(rowId);
		var rowItem = Dynamicweb.Content.Services.Items.GetItem(row.ItemType, row.ItemId);
		var rowThemeId = Dynamicweb.Core.Converter.ToString(rowItem["ColumnBackground"]);
		var rowThemeParagraph = rowThemeId != null && rowThemeId != string.Empty ? Dynamicweb.Content.Services.Paragraphs.GetParagraph(Dynamicweb.Core.Converter.ToInt32(rowThemeId)) : null;
		var rowTheme = rowThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(rowThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(rowThemeParagraph)?.Item : null;

		var blockThemeId = block.GetRawValueString("Theme");
		var blockThemeParagraph = blockThemeId != null && blockThemeId != string.Empty ? Dynamicweb.Content.Services.Paragraphs.GetParagraph(Dynamicweb.Core.Converter.ToInt32(blockThemeId)) : null;
		var blockTheme = blockThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(blockThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(blockThemeParagraph)?.Item : rowTheme is object ? rowTheme : emailContentTheme;

		string backgroundColor = blockTheme != null ? $"background-color:{blockTheme.GetString("BackgroundColor")};" : string.Empty;
		string foregroundColor = blockTheme != null ? $"color:{blockTheme.GetString("ForegroundColor", "inherit")};" : string.Empty;
		var colorForeground = blockTheme?.GetColor("ForegroundColor") ?? Dynamicweb.Ecommerce.ProductCatalog.ViewModelFactory.CreateFieldColorValueView("#000000");

		string textPrice = "font-variant-numeric:tabular-nums;break-inside:avoid;word-break:keep-all;white-space:nowrap;";
		string showPricesWithVat = Pageview?.Area?.EcomPricesWithVat != null ? Pageview.Area.EcomPricesWithVat.ToLower() : "false";
		bool neverShowVat = string.IsNullOrEmpty(showPricesWithVat);

		@* Order lines *@
		<table style="table-layout:fixed;@GetTableReset()@foregroundColor" cellpadding="0" cellspacing="0" width="100%" role="presentation">
			<tbody>
				@foreach (LoopItem orderline in GetLoop("OrderLines"))
				{
					string name = orderline.GetString("Ecom:Order:OrderLine.ProductName");
					string image = "Admin/Public/GetImage.ashx?image=" + orderline.GetString("Ecom:Product.PrimaryImage") + "&width=100&height=100";
					var uri = Dynamicweb.Context.Current.Request.Url;
					var hostname = uri.Scheme + Uri.SchemeDelimiter + uri.Host;
					string imagePath = hostname + "/" + image;
					string priceTotalWithDiscounts = !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted")) ? orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted") : "";
					string unitPrice = !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted")) ? orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted") : "";
					string discountPrice = !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.UnitPriceWithProductDiscount.PriceFormatted")) ? orderline.GetString("Ecom:Order:OrderLine.UnitPriceWithProductDiscount.PriceFormatted") : "";
					string discountTotal = !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.TotalDiscount.PriceFormatted")) ? orderline.GetString("Ecom:Order:OrderLine.TotalDiscount.PriceFormatted") : "";
					string variantText = orderline.GetString("Ecom:Order:OrderLine.ProductVariantText");
					var quantity = orderline.GetDouble("Ecom:Order:OrderLine.Quantity");

					bool isProduct = orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct");

					if (isProduct)
					{
						<tr style="@GetTableReset()">
							
							@* Image *@
							<td valign="top" width="108" style="@GetTableReset()padding-bottom:8px;">
								<div align="left" style="font-size:2px;">
									<img src="@imagePath" alt="@name">
								</div>
							</td>

							<td valign="top" style="@GetTableReset()padding-bottom:8px;">

								<table style="border-collapse:collapse;table-layout:fixed;@GetTableReset()" cellpadding="0" cellspacing="0" width="100%" role="presentation">
									<tbody>
										@* Title *@
										<tr style="@GetTableReset()">
											<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;font-weight:bold;text-decoration:none;">
												@name
											</td>
										</tr>

										@* Variants *@
										<tr style="@GetTableReset()">
											<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:13px;text-decoration:none;">
												@variantText
											</td>
										</tr>

										@* Unit price *@
										<tr style="@GetTableReset()">
											<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:13px;text-decoration:none;">
												@if (discountPrice == unitPrice)
												{
													<span style="@(textPrice)">@unitPrice</span>
												}
												else
												{
													<span style="@(textPrice)">@discountPrice</span>
													<span style="@(textPrice) text-decoration:line-through;">@unitPrice</span>
												}
											</td>
										</tr>

										@* Quantity *@
										<tr style="@GetTableReset()">
											<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:13px;text-decoration:none;">
												@Translate("Qty"): @quantity
											</td>
										</tr>
									</tbody>
								</table>
							</td>

							@* Orderline total *@
							<td valign="top" width="108" style="@GetTableReset()padding-bottom:8px;">
								<table style="border-collapse:collapse;table-layout:fixed;@GetTableReset()text-align:right;" cellpadding="0" cellspacing="0" width="100%" role="presentation">
									<tbody>
										<tr style="@GetTableReset()">
											<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;font-weight:bold;text-decoration:none;@(textPrice)">
												@priceTotalWithDiscounts
											</td>
										</tr>

										@if (orderline.GetDouble("Ecom:Order:OrderLine.TotalDiscount.Price.Value") != 0)
										{
											<tr style="@GetTableReset()">
												<td style="@GetTableReset()@GetFontStack()line-height:18px;font-size:13px;text-decoration:none;@(textPrice)">
													@discountTotal
												</td>
											</tr>
										}
									</tbody>
								</table>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>

		@* Summary *@
		<table style="table-layout:fixed;@GetTableReset()@(foregroundColor)padding-top:16px;border-top:1px solid @GetMutedColor(colorForeground.Hex,75)" cellpadding="0" cellspacing="0" width="100%" role="presentation">
			<tbody>
				<tr style="@GetTableReset()">
					@{
						double totalPriceWithoutOrderDiscountsFeesAndTaxesValue = GetDouble("Ecom:Order.TotalPriceWithoutDiscountsFeesAndTaxes.Price.Value") + GetDouble("Ecom:Order.TotalProductDiscount.Price.Value");
						var orderCurrency = Dynamicweb.Ecommerce.Services.Currencies.GetCurrency(GetString("Ecom:Order.Currency.Code"));
						string totalPriceWithoutOrderDiscountsFeesAndTaxes = Dynamicweb.Ecommerce.Services.Currencies.Format(orderCurrency, totalPriceWithoutOrderDiscountsFeesAndTaxesValue);
					}

					@* Subtotal *@
					<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:15px;font-weight:bold;text-decoration:none;padding-bottom:8px;">
						@Translate("Subtotal")
					</td>
					<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
						@if (GetDouble("Ecom:Order.TotalPriceWithoutDiscountsFeesAndTaxes.Price.Value") != totalPriceWithoutOrderDiscountsFeesAndTaxesValue)
						{
							<span style="@(textPrice)text-decoration:line-through;">@GetString("Ecom:Order.TotalPriceWithoutDiscountsFeesAndTaxes.PriceFormatted")</span>
						}
						<span style="@(textPrice) font-weight:bold;">@totalPriceWithoutOrderDiscountsFeesAndTaxes</span>

						@if (!neverShowVat && showPricesWithVat == "false")
						{
							<div>@Translate("Excl. VAT")</div>
						}
						@if (!neverShowVat && showPricesWithVat == "true")
						{
							<div>@Translate("Incl. VAT")</div>
						}
					</td>
				</tr>

				@* Discounts (only order discounts) *@
				@foreach (LoopItem orderline in GetLoop("OrderLines"))
				{
					bool isDiscount = orderline.GetBoolean("Ecom:Order:OrderLine.IsDiscount");
					bool isProductIdOrNumber = !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.ProductID")) || !string.IsNullOrEmpty(orderline.GetString("Ecom:Order:OrderLine.ProductNumber"));  //Live Cart orderlines may not return ProductId. Manually entered products may not have ProductNumber
					bool isOrderAmountDiscount = orderline.GetInteger("Ecom:Order:OrderLine.Type") == 1 && !isProductIdOrNumber;
					if (isDiscount && isOrderAmountDiscount)
					{
						<tr style="@GetTableReset()">
							<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
								@orderline.GetString("Ecom:Order:OrderLine.ProductName")
							</td>
							<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
								@orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted")
							</td>
						</tr>
					}
				}

				@* Shipping *@
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.ShippingMethodID")) && GetDouble("Ecom:Order.ShippingFee.Price.Value") != 0.0)
				{
					<tr style="@GetTableReset()">
						<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
							@Translate("Delivery")
						</td>
						<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
							@GetString("Ecom:Order.ShippingFee.PriceFormatted")
						</td>
					</tr>
				}

				@* Payment *@
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.PaymentMethodID")))
				{
					if (GetDouble("Ecom:Order.PaymentFee.Price.Value") != 0)
					{

						<tr style="@GetTableReset()">
							<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
								@Translate("Payment")
							</td>
							<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
								@GetString("Ecom:Order.PaymentFee.PriceFormatted")
							</td>
						</tr>
					}
				}

				@* Taxes *@
				@if (GetDouble("Ecom:Order.Taxes.Total.Price.Value") != 0)
				{
					<tr style="@GetTableReset()">
						<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
							@Translate("Sales tax")
						</td>
						<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
							@GetString("Ecom:Order.Taxes.Total.PriceFormatted")
						</td>
					</tr>
				}

				@* Total *@
				<tr style="@GetTableReset()">
					<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:18px;font-weight:bold;text-decoration:none;padding-bottom:8px;padding-top:16px;border-top:1px solid @GetMutedColor(colorForeground.Hex,75);">
						@Translate("Total")
					</td>
					<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;padding-top:16px;border-top:1px solid @GetMutedColor(colorForeground.Hex,75);">
						<div style="@(textPrice)font-size:22px;font-weight:bold;">@GetString("Ecom:Order.Price.PriceFormatted")</div>
						@if (!neverShowVat && showPricesWithVat == "false")
						{
							<div>@Translate("Excl. VAT")</div>
						}
						@if (!neverShowVat && showPricesWithVat == "true")
						{
							<div>@Translate("Incl. VAT")</div>
						}
					</td>
				</tr>

				@if (!neverShowVat)
				{
					<tr style="@GetTableReset()">
						<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
							@Translate("VAT")
						</td>
						<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
							@GetString("Ecom:Order.Price.VATFormatted")
						</td>
					</tr>
					if (showPricesWithVat == "false")
					{
						<tr style="@GetTableReset()">
							<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
								@Translate("Total incl. VAT")
							</td>
							<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
								@GetString("Ecom:Order.Price.PriceWithVATFormatted")
							</td>
						</tr>
					}
				}

				@if (GetDouble("Ecom:Order.TotalDiscount.Price.Value") != 0)
				{
					<tr style="@GetTableReset()">
						<td valign="top" width="35%" style="@GetTableReset()@GetFontStack()line-height:18px;font-size:14px;text-decoration:none;padding-bottom:8px;">
							@Translate("Discount")
						</td>
						<td valign="top" width="65%" style="@GetTableReset()@GetFontStack()@(textPrice)line-height:18px;font-size:14px;text-decoration:none;text-align:right;padding-bottom:8px;">
							@GetString("Ecom:Order.TotalDiscount.PriceFormatted")
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

