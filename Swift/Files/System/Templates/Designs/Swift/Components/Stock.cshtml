@inherits ViewModelTemplate<ProductViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
	bool isLazyLoadingForProductInfoEnabled = Dynamicweb.Core.Converter.ToBoolean(Dynamicweb.Context.Current.Items["IsLazyLoadingForProductInfoEnabled"]);
	bool hideInventory = GetViewParameter("HideInventory") != null ? GetViewParameterBoolean("HideInventory") : false;

	bool isNeverOutOfStock = Model.NeverOutOfstock;
	bool hasExpectedDelivery = Model.ExpectedDelivery != null && Model.ExpectedDelivery > DateTime.Now;
	string expectedDeliveryDate = Model.ExpectedDelivery?.ToShortDateString() ?? string.Empty;

	string stockLevel = Model.StockLevel > 100 ? "100+" : Model.StockLevel.ToString();
}

@if (!isNeverOutOfStock)
{
	if (isLazyLoadingForProductInfoEnabled)
	{
		string inStockStateLabel = !string.IsNullOrEmpty(Model.StockStatus) ? Model.StockStatus : Translate("In stock");
		string noStockStateLabel = !string.IsNullOrEmpty(Model.StockStatus) ? Model.StockStatus : Translate("Out of Stock");

		<div class="js-stock-state">
			@if (!hideInventory)
			{
				<p class="fs-7 text-success m-0 d-none" data-show-if="LiveProductInfo.product.StockLevel > 0"><span class="js-text-stock"></span> @inStockStateLabel</p>
			}
			else
			{
				<p class="fs-7 text-success m-0 d-none" data-show-if="LiveProductInfo.product.StockLevel > 0">@inStockStateLabel</p>
			}
			<p class="fs-7 text-danger m-0 d-none" data-show-if="LiveProductInfo.product.StockLevel <= 0">@noStockStateLabel</p>

			<p class="d-none" data-show-if="LiveProductInfo.product.ExpectedDelivery != null && new Date(LiveProductInfo.product.ExpectedDelivery) > new Date()">
				<span>@Translate("Expected:")</span>
				<span class="js-text-expected-delivery"></span>
			</p>
		</div>
	}
	else
	{
		double? currentStockLevel = Model.StockLevel;
		string stockStateLabel = currentStockLevel > 0 ? Translate("In stock") : Translate("Out of stock");
		stockStateLabel = !string.IsNullOrEmpty(Model.StockStatus) ? Model.StockStatus : stockStateLabel;
		string stockStateCss = currentStockLevel > 0 ? "text-success" : "text-danger";

		if (!hideInventory && currentStockLevel > 0)
		{
			<p class="fs-7 m-0 @stockStateCss">@currentStockLevel @stockStateLabel</p>
		}
		else
		{
			<p class="fs-7 m-0 @stockStateCss">@stockStateLabel</p>
		}

		if (hasExpectedDelivery)
		{
			<p>
				<span>@Translate("Expected:")</span>
				<span>@expectedDeliveryDate</span>
			</p>
		}
	}
}
