@helper RenderOrderLineItem(LoopItem orderline) {

	string name = orderline.GetString("Ecom:Order:OrderLine.ProductName");
	string image = "/Admin/Public/GetImage.ashx?width=" + 180 + "&height=" + 180 + "&image=" + orderline.GetString("Ecom:Product.PrimaryImage") + "&Format=WebP&Quality=100";
	string removeFromBasketLink = orderline.GetString("Ecom:Order:OrderLine.DeleteLink");
	string priceTotalWithDiscounts = orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted");
	string unitPrice = orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted");
	string discountPrice = orderline.GetString("Ecom:Product.Discount.Price.PriceFormatted");
	string discountTotal = orderline.GetString("Ecom:Order:OrderLine.TotalDiscount.PriceFormatted");
	string variantText = orderline.GetString("Ecom:Order:OrderLine.ProductVariantText");
	var orderlineId = orderline.GetValue("Ecom:Order:OrderLine.Id");
	var quantity = orderline.GetDouble("Ecom:Order:OrderLine.Quantity");
	string primaryGroupId = orderline.GetString("Ecom:Order:OrderLine.PrimaryOrDefaultGroupId");
	string productId = orderline.GetString("Ecom:Order:OrderLine.ProductID");
	string variantId = orderline.GetString("Ecom:Order:OrderLine.ProductVariantID");

	string minQty = orderline.GetDouble("Ecom:Product.PurchaseMinimumQuantity") != 1 ? "min=\"" + orderline.GetDouble("Ecom:Product.PurchaseMinimumQuantity").ToString() + "\"" : "min=\"1\"";
	string stepQty = orderline.GetDouble("Ecom:Product.PurchaseQuantityStep") > 1 ? orderline.GetDouble("Ecom:Product.PurchaseQuantityStep").ToString() : "1";
	string qtyValidCheck = stepQty != "1" ? "onkeyup=\"swift.Cart.QuantityValidate(event)\"" : ""; 

	string link = "Default.aspx?ID=" + GetPageIdByNavigationTag("Shop");
	link += $"&GroupID={primaryGroupId}";
	link += $"&ProductID={productId}";
	link += !string.IsNullOrEmpty(variantId) ? $"&VariantID={variantId}" : "";
	link = Dynamicweb.Frontend.SearchEngineFriendlyURLs.GetFriendlyUrl(link);

	bool isProduct = orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct");

	if (isProduct) {
		<article class="grid pt-3" style="row-gap: 0;">
				<div class="g-col-3 g-col-lg-2">
					<a href="@link" class="ratio ratio-1x1 d-block" title="@name">
						<img class="cart-item-img" src="@image" style="object-fit: contain;" alt="@name">
					</a>
				</div>

				<div class="g-col-9 g-col-lg-10">

					<div class="grid" style="row-gap: 0.5rem;">

						<div class="g-col-12 g-col-md-8 grid grid-7 grid-md-9" style="row-gap: 0.5rem;">
							<div class="g-col-7">
								@* Title *@
								<h3 class="h6 fs-7 fs-md-6 mb-0">
									<a href="@link" class="text-decoration-none" title="@name">@name</a>							
								</h3>

								@* Variants *@
								@if(!string.IsNullOrEmpty(variantText)) {
									<p class="mt-2 mb-0 fs-7 fs-md-6">@variantText</p>
								}

								@* Unit price *@
								<p class="fs-7 fs-md-6 mt-2 mb-0">
									@if(discountPrice == unitPrice) {
										<span class="d-block">
											<span class="text-price">@unitPrice</span>
										</span>
									}
									else 
									{
										<span class="text-price">@discountPrice</span>
										<span class="text-decoration-line-through fs-7">
											<span class="text-price">@unitPrice</span>
										</span>
									}
								</p>
							</div>

							<div class="g-col-7 g-col-md-2">
								@* Quantity *@
								<div class="js-input-group">
									<label for="QuantityOrderLine@(orderlineId)" class="visually-hidden">@Translate("Quantity"):</label>
									<input type="number" id="QuantityOrderLine@(orderlineId)" step="@stepQty" @minQty class="form-control text-center" value="@quantity" name="QuantityOrderLine@(orderlineId)" onChange="UpdateQuantity()" @qtyValidCheck style="max-width: 4.5rem;">
									@if (stepQty != "1")
									{
										<div class="invalid-feedback d-none">
											@Translate("Please select a quantity that is dividable by") @stepQty
										</div>
									}
								</div>
							</div>
						</div>

						<div class="g-col-12 g-col-md-4 text-end">
							@* Total *@
							<span class="h6 mb-0 d-block fs-7 fs-md-6">
								<span class="text-price">@priceTotalWithDiscounts</span>
							</span>
							@if(orderline.GetDouble("Ecom:Order:OrderLine.TotalDiscount.Price.Value") != 0)
							{
								<span class="m-0 d-block fs-8">
									<span class="text-price">@discountTotal</span>
								</span>
							}
						</div>

						<div class="g-col-12">
							@* Remove *@
							<a href="@removeFromBasketLink" class="btn btn-link btn-sm p-0 m-0 fs-8" title="@Translate("Remove")">@Translate("Remove")</a>
						</div>
					</div>
				</div>
				@* Bottom border *@
				<span class="g-col-12 mt-3">
					<span class="d-none d-lg-block border-bottom"></span>
				</span>
		</article>
	}  
}
