	@{ 
Dictionary<string, LoopItem> deliveryMethods = new Dictionary<string, LoopItem>();
var shippingMethods = GetLoop("Shippingmethods");

foreach(var shippingMethod in shippingMethods)
{
var shippingMethodName = shippingMethod.GetString("Ecom:Cart.Shippingmethod.Name");
deliveryMethods.Add(shippingMethodName, shippingMethod);
}

var dayOptions = new List<(string identifier, string name, string display)>
{
("NextWorkingDay", "NextWorkingDay", "Next working day"),
("Weekend", "Weekend", "Weekend"),
("ClickCollect", "Collect", "Collect"),
};
}
<div class="delivery-method">
	<div id="delivery-day-container container container-no-padding">
		<div class="row">
			@foreach (var opt in dayOptions)
			{

			<div class="col col-gap d-flex flex-column justify-content-center align-items-center py-2 text-input-field radioContainer">
				<div class="pb-2">
					<label class="form-check-label lh-1 px-3 pb-1 text-label-red text-center" for="@opt.name">
						@opt.display
					</label>
				</div>

				<div>
					<label class="custom-radio">
						<input class="form-check-input custom-radio-input" type="radio" name="deliveryType"  value="@opt.name"  onclick="openTab(event, '@opt.identifier')">
						<span class="custom-radio-button"></span>
					</label>
				</div>
			</div>

			}
		</div>
	</div>


	<div id="type_NextWorkingDay-desktop" class="hidden delivery-options-container">
		@{  bool isFirstWorkingDayItem = true;}
		@foreach(var shippingMethod in deliveryMethods.Where(x => x.Key.StartsWith("NextWorkingDay_")))
		{
	if (!isFirstWorkingDayItem)
{	
<div class="breakpoint-thin-margin"></div>
}
		<div class="row">
			<div class="col d-flex flex-row justify-content-space-between align-items-center py-2 radioContainer">
				<div>
					<label class="custom-radio">
						<input class="form-check-input custom-radio-input" type="radio" name="EcomCartShippingmethodID" id="EcomCartShippingmethodID_@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.ID")"     @if (!string.IsNullOrWhiteSpace(shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.IsSelected"))) { <text>
						       checked="checked" </text> }>
						<span class="custom-radio-button"></span>
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1 text-label-black" >
						@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.Description")
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1">
						@shippingMethod.Key.Split("_")[1]
					</label>
				</div>

				<div style="text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1" >
						<strong>@shippingMethod.Value.GetString("Ecom:Cart.ShippingMethod.Price")</strong>
					</label>
				</div>

			</div>
		</div>
isFirstWorkingDayItem = false;
		}
	</div>
	<div id="type_Weekend-desktop" class="hidden delivery-options-container">
		@{  bool isFirstWeekendItem = true;}
		@foreach(var shippingMethod in deliveryMethods.Where(x => x.Key.StartsWith("WeekendSaturday_") || x.Key.StartsWith("WeekendSunday_")))
		{
if (!isFirstWeekendItem)
{	
<div class="breakpoint-thin-margin"></div>
}
		
		<div class="row">
			<div class="col d-flex flex-row justify-content-space-between align-items-center py-2 radioContainer">
				<div>
					<label class="custom-radio">
						<input class="form-check-input custom-radio-input" type="radio" name="EcomCartShippingmethodID" id="EcomCartShippingmethodID_@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.ID")"     @if (!string.IsNullOrWhiteSpace(shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.IsSelected"))) { <text>
						       checked="checked" </text> }>
						<span class="custom-radio-button"></span>
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1 text-label-black">
						@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.Description")
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1">
						@shippingMethod.Key.Split("_")[1]
					</label>
				</div>

				<div style="text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1" >
						<strong>@shippingMethod.Value.GetString("Ecom:Cart.ShippingMethod.Price")</strong>
					</label>
				</div>

			</div>
		</div>
		isFirstWeekendItem = false;
		}
	</div>
	<div id="type_ClickCollect-desktop" class="hidden delivery-options-container">
		@{  bool isFirstCollectItem = true;}
		@foreach(var shippingMethod in deliveryMethods.Where(x => x.Key.StartsWith("ClickCollect_")))
		{
	if (!isFirstCollectItem)
{	
<div class="breakpoint-thin-margin"></div>
}
		<div class="row">
			<div class="col d-flex flex-row justify-content-space-between align-items-center py-2 radioContainer">
				<div>
					<label class="custom-radio">
						<input class="form-check-input custom-radio-input" type="radio" name="EcomCartShippingmethodID" id="EcomCartShippingmethodID_@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.ID")"     @if (!string.IsNullOrWhiteSpace(shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.IsSelected"))) { <text>
						       checked="checked" </text> }>
						<span class="custom-radio-button"></span>
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1 text-label-black">
						@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.Description")
					</label>
				</div>

				<div style="width: 40%; text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1">
						@shippingMethod.Key.Split("_")[1]
					</label>
				</div>

				<div style="text-align: start;">
					<label class="form-check-label lh-1 px-3 pb-1" >
						<strong>@shippingMethod.Value.GetString("Ecom:Cart.ShippingMethod.Price")</strong>
					</label>
				</div>

			</div>
		</div>
isFirstCollectItem = false;
}
	</div>

</div>

<div class="delivery-method-mobile">
	<div id="delivery-day-container container container-no-padding">
		<div class="row g-2">
			@foreach (var opt in dayOptions)
			{

			<div class="col-12 col-gap d-flex flex-column justify-content-start align-items-center py-2 text-input-field">
				<div class="col-12 col-gap d-flex flex-row justify-content-start align-items-center radioContainer">


					<div>
						<label class="custom-radio">
							<input class="form-check-input custom-radio-input" type="radio" name="deliveryType"  value="@opt.name"  onclick="openTabMobile(event, '@opt.identifier')">
							<span class="custom-radio-button"></span>
						</label>
					</div>

					<div class="pb-2">
						<label class="form-check-label lh-1 px-3 pb-1 text-label-red text-center" for="@opt.name">
							@opt.display
						</label>
					</div>



				</div>

				<div id="type_@opt.identifier-mobile" class="hidden delivery-options-container-mobile container-no-padding pt-2">
					@{
					Func<string, Dictionary<string, LoopItem>, IEnumerable<KeyValuePair<string, LoopItem>>> FilterShippingMethods =
					(identifier, shippingMethods) =>
					{
					if (identifier == "Weekend")
					{
					return shippingMethods.Where(x => x.Key.StartsWith("WeekendSaturday_") || x.Key.StartsWith("WeekendSunday_"));
					}
					else
					{
					return shippingMethods.Where(x => x.Key.StartsWith($"{identifier}_"));
					}
					};

					var filteredShippingMethods = FilterShippingMethods(opt.identifier, deliveryMethods);

					foreach (var shippingMethod in filteredShippingMethods)
					{
					<div class="breakpoint-thin-margin"></div>
					<div class="row">
						<div class="col d-flex flex-row justify-content-space-between align-items-center radioContainer">
							<div>
								<label class="custom-radio">
									<input class="form-check-input custom-radio-input" type="radio" name="EcomCartShippingmethodID" id="EcomCartShippingmethodID_@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.ID")"
									       @if (!string.IsNullOrWhiteSpace(shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.IsSelected")))
									       {
									       <text>
									       checked="checked" </text>
									       }>
									<span class="custom-radio-button"></span>
								</label>
							</div>

							<div style="width: 40%; text-align: start;">
								<label class="form-check-label lh-1 px-3 pb-1 text-label-black">
									@shippingMethod.Value.GetString("Ecom:Cart.Shippingmethod.Description")
								</label>
							</div>

							<div style="width: 40%; text-align: start;">
								<label class="form-check-label lh-1 px-3 pb-1">
									@shippingMethod.Key.Split("_")[1]
								</label>
							</div>

							<div style="text-align: start;">
								<label class="form-check-label lh-1 px-3 pb-1">
									<strong>@shippingMethod.Value.GetString("Ecom:Cart.ShippingMethod.Price")</strong>
								</label>
							</div>

						</div>
					</div>
					}
					}
				</div>
			</div>
			}
		</div>
	</div>


</div> 
<script>
	function openTab(evt, openTab) {
		document.querySelectorAll('.delivery-options-container').forEach(t => t.classList.add('hidden'));
		document.querySelector(`#type_${openTab}-desktop`).classList.remove('hidden');
		alternateOtherDeviceTypeSelections('desktop', 'mobile')
	}

	function openTabMobile(evt, openTab) {
		document.querySelectorAll('.delivery-options-container-mobile').forEach(t =>
			t.classList.add('hidden'));
		document.querySelector(`#type_${openTab}-mobile`).classList.remove('hidden');
		let elements = document.querySelectorAll('[id$="-desktop"] input[type="radio"]');
		elements.forEach(e => e.disabled = true);
		alternateOtherDeviceTypeSelections('mobile', 'desktop')
	}

	function alternateOtherDeviceTypeSelections(toEnableDeviceType, toDisableDeviceType)
	{
		// Array of type values
		let typeValues = ['NextWorkingDay', 'Weekend', 'ClickCollect']; // replace these with your types

// Iterate over each typeValue
		typeValues.forEach((typeValue) => {
			// Select all radio input elements under an element with the id `type_<TYPE>-mobile`
			let disabledElements = document.querySelectorAll(`#type_${typeValue}-${toDisableDeviceType} input[type="radio"]`);

			// Iterate over the elements and set them to disabled
			disabledElements.forEach(e => {
				e.disabled = true;
				e.checked = false;
			});

			let enabledElements = document.querySelectorAll(`#type_${typeValue}-${toEnableDeviceType} input[type="radio"]`);

			// Iterate over the elements and set them to disabled
			enabledElements.forEach(e => {
				e.disabled = false;
				e.checked = false;
			});
		});
	}
	window.onload = function() {
		let form = document.querySelector('form'); // Get form element, you may need to adjust this selector

		form.addEventListener('submit', function(e) {
			// Get selected parent radio button
			let parentRadios = document.querySelectorAll('input[type="radio"][name="deliveryType"]');
			let selectedParent = [...parentRadios].find(radio => radio.checked);

			if (!selectedParent) {
				e.preventDefault();
				alert('Please choose a delivery type.');
				return;
			}

			// Get selected child radio button
			let childRadios = document.querySelectorAll('input[type="radio"][name="EcomCartShippingmethodID"]');
			let selectedChild = [...childRadios].find(radio => radio.checked);

			if (!selectedChild) {
				e.preventDefault();
				alert('Please choose a shipping method.');
				return;
			}

			// Submit form if no issues
		});
	}
</script>
