@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb
@using System.IO
@using Dynamicweb.Security.UserManagement
@{
string stepsIconPath = "/Files/Templates/Designs/Swift/Assets/icons/";
string nextButtonName = Translate("Next");
string previousButtonName = Translate("Back");


List<string> addressList = new List<string>();
if (!string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
{
addressList.Add(GetString("UserManagement:User.Address"));
}
if (!string.IsNullOrEmpty(GetString("UserManagement:User.Zip")))
{
addressList.Add(GetString("UserManagement:User.Zip"));
}
if (!string.IsNullOrEmpty(GetString("UserManagement:User.City")))
{
addressList.Add(GetString("UserManagement:User.City"));
}
string addressString = (string.Join(",", addressList.Select(x => x.ToString()).ToArray()));
var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
string theme = !string.IsNullOrEmpty(themeRaw) ? " theme " + themeRaw.Replace(" ", string.Empty).Trim().ToLower() : string.Empty;

}

<div class="h-100">
    <div class=" checkout-grid order-last order-lg-first @(theme)">
        @Include("Helpers/TSDSummarySidebar.cshtml")
        <form name="ordersubmit" id="ordersubmit" method="post" autocomplete="off">
            <h2>About You</h2>
	        @Include("Helpers/TSD_BillingAddressComponent.cshtml")

            @Include("Helpers/TSD_AboutYouComponent.cshtml")
            @Include("Helpers/Errors.cshtml")

            <!-- @Include("Shared/Helpers/StepSummary_v2.cshtml") -->

            <input type="hidden" id="CurrentStep">

            @Include("Shared/Helpers/TSD_DeliveryAddressComponent.cshtml")
            <div class="breakpoint"></div>
            
	        @Include("Helpers/TSDOrderReference.cshtml")
	        
	        <div class="pt-3">
		            @Include("Helpers/TSDOrderComment.cshtml")
	        </div>
	     
            <div class="breakpoint"></div>
	        <h2>Delivery Method</h2>
	        @Include("Helpers/TSD_ShippingSelectorComponent.cshtml")
            
            
            
            
            
            
            
	        
	        
	        
	        <button type="submit" name="@GetString("CartV2.NextStepButtonName")"
                    id="@GetString("CartV2.NextStepButtonName")" class="next-step-button">
                <div>
                    <span>@nextButtonName</span>
                    <span class="icon-2 ms-1 position-absolute position-md-static end-0">
						@ReadFile(stepsIconPath + "arrow-right.svg")
					</span>
                </div>
            </button>
        </form>
        <div class="column-step-container">
            <div class="column column-step">
                <div class="next-section">
                    <h1 class="numberHeader">2</h1>
                    <p class="section-text">@Translate("PAYMENT DETAILS")</p>
                </div>
                <div class="arrow-grey">@ReadFile(stepsIconPath + "arrowgrey.svg")</div>
            </div>

            <div class="column column-step">
                <div class="next-section">
                    <h1 class="numberHeader">3</h1>
                    <p class="section-text">@Translate("ORDER COMPLETE")</p>
                </div>
                <div class="arrow-grey">@ReadFile(stepsIconPath + "arrowgrey.svg")</div>
            </div>
        </div>
    </div>
</div>

<script>
    function submitForm() {
        document.querySelector("#CurrentStep").name = "@GetString("CartV2.CurrentStepButtonName")";
        swift.PageUpdater.Update(document.querySelector("#ordersubmit"));
    }


    document.querySelectorAll('.radioContainer').forEach(container => {
	    container.addEventListener('click', e => {
		    if (e.target.type !== "radio") {
			    let radioButton = container.querySelector('input[type="radio"]');
			    radioButton.click();
		    }
	    });
    });
    
</script>

<script>
    gtag("event", "begin_checkout", {
        currency: "@GetString("Ecom:Order.CurrencyCode")",
        value: @GetDouble("Ecom:Order.Price.Price.Value").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture),
        items: [
            @foreach (LoopItem orderline in GetLoop("OrderLines")) {
            <text>
            {
                item_id: "@orderline.GetString("Ecom:Order:OrderLine.ProductID")",
                item_name: "@orderline.GetString("Ecom:Order:OrderLine.ProductName")",
                currency: "@orderline.GetString("Ecom:Order:OrderLine.UnitPrice.CurrencyCode")",
                price: @orderline.GetDouble("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.Price.Value").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture),
                quantity: @orderline.GetDouble("Ecom:Order:OrderLine.Quantity").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)
            },
            </text>
            }
        ]
    });
</script>

@* Address format helper methods *@
@Include("../Helpers/DeliveryAddressDisplayFormatted.cshtml")
@Include("../Helpers/UserAddressDisplayFormatted.cshtml")


<style>
    .hidden {
        display: none;
    }

    .form-check {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .arrow-grey {
        margin-bottom: 20px;
    }

    .delivery-method-mobile {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .delivery-date-mobile {
        width: 100%;
        text-align: left;
    }

    .delivery-date-mobile .select-day {
        display: flex;
        justify-content: space-between;
    }

    .delivery-method-mobile .delivery-type {
        display: flex;
        flex-direction: row-reverse;
        gap: 20px;
        border: solid 1px #CED3DC;
        border-radius: 10px;
        padding: 20px;
        justify-content: flex-end;
        aspect-ratio: revert;
    }

    .next-step-button {
        background-color: #04AA6D;
        border: none;
        color: white;
        padding: 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        border-radius: 12px;
        text-transform: uppercase;
        font-weight: bold;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        margin-top: 20px;
    }

    .breakpoint {
        width: 100%;
        border: solid 1px #CED3DC;
        margin-top: 40px;
        margin-bottom: 40px !important;
    }

    .breakpoint-thin-margin {
	    width: 100%;
	    border: solid 1px #CED3DC;
	    margin-top: 10px;
	    margin-bottom: 10px !important;
    }

    input[type='radio'] {
        accent-color: #D5352D;
    }

    .delivery-type.active:before {
        display: block;
    }

    .delivery-type.active {
        border-bottom: 0px;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
    }


    .delivery-type:before {
        content: "";
        position: absolute;
        border-left: solid 1px #CED3DC;
        border-right: solid 1px #CED3DC;
        border-bottom: 10px solid white;
        height: 19%;
        bottom: -19%;
        left: -0.5%;
        width: 102%;
        border-top: 0px;
        display: none;
    }

    h2 {
        font-size: 28px;
    }

    .delivery-method {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }

    .delivery-options-container, .delivery-date {
        border: solid 1px #CED3DC;
        border-radius: 10px;
        padding: 20px;
    }

    .delivery-options-container-mobile{
	 
    }

    .delivery-options {
        display: flex;
        justify-content: space-between;
    }

    .delivery-types-container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .delivery-type {
        display: flex;
        flex-direction: column;
        gap: 20px;
        border: solid 1px #CED3DC;
        border-radius: 10px;
        padding: 20px;
        text-align: center;
        flex-grow: 1;
        aspect-ratio: 2/1;
        justify-content: center;
        cursor: pointer;
        position: relative;
    }

    .order-information {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }

    .order-information label {
        color: #3B3E41;
        font-weight: 700;
        font-size: 18px;
        text-transform: revert;
    }

	
    form {
        background-color: white;
        padding: 20px;
    }
	
    .text-label-black {
        color: #000000;
        font-weight: 600;
        font-size: 16px;
	    padding-bottom: 5px;
    }

    .text-label-red {
	    color: #D5352D;
	    text-transform: uppercase;
	    font-weight: 600;
	    font-size: 14px;
	    padding-bottom: 5px;
    }
	
    .text-input-field {
        padding: 14px;
        border: 1px solid #9599A0;
	    border-radius: 10px;
    }

    .checkout-grid {
        display: grid;
        grid-template-columns: 0.2fr 1fr 0.3fr;
        grid-template-rows: 1fr;
        grid-column-gap: 20px;
        grid-row-gap: 0px;
        background-color: transparent;
    }

    .column-step .next-section {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-direction: column;
        padding-top: 20px;
        height: 180px;
    }

    .column-step .next-section .section-text {
        color: #D5352D;
        font-weight: 600;
        line-height: 15px;
        transform: rotate(270deg);
    }

    .column-step {
        flex-grow: 0 !important;
        border-radius: 10px;
        min-width: 29%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .column-step-container {
        display: flex;
        gap: 20px;
        padding-right: 0px !important;
    }

    .container-no-padding {
	    margin: 0;
	    padding: 0;
	    max-width: 100%;
    }

    @@media (min-width: 768px) {
        .delivery-method {
            display: flex;
        }

        .delivery-method-mobile {
            display: none;
        }
    }

    @@media (max-width: 768px) {
        .delivery-method {
            display: none;
        }

        .delivery-method-mobile {
            display: flex;
        }
    }

    @@media (max-width: 996px) {
        form {
            grid-column: 1 / span 2;
        }

        .checkout-grid {
            grid-template-columns: 2fr;
            grid-template-rows: 2fr;
            grid-row-gap: 20px;
        }

        .column-step .next-section {
            justify-content: revert;
        }

        .column-step-container {
            flex-direction: row;
            gap: 20px;
            grid-column: 2 / span 1;
            grid-row: 2;
        }

        #summarySidebar {
            order: 2;
            margin-top: 20px;
            grid-column: 1 / span 1;
            grid-row: 2;
            margin-top: 0px !important;
        }

        .column-step {
            order: 1;
            align-items: center;
        }

        .column-step .next-section .section-text {
            transform: revert;
            padding: 20px;
            text-align: center;
        }
    }

    /* Hide default checkbox */
    input[type="checkbox"].custom-checkbox {
	    display: none;
    }

    /* Create custom checkbox */
    input[type="checkbox"].custom-checkbox + .checkmark {
	    position: relative;
	    display: inline-block;
	    height: 24px; /* Adjust size here */
	    width: 24px; /* Adjust size here */
	    background-color: #fff;
	    border: 1px solid #9599A0;
	    border-radius: 5px;  /* Rounded corners */
    }

    /* On mouse-over, add a grey background color */
    input[type="checkbox"].custom-checkbox:hover + .checkmark {
	    background-color: #e7e4e4;
    }

    /* Show the SVG checkmark when checked */
    input[type="checkbox"].custom-checkbox:checked + .checkmark:after {
	    content:'';
	    position: absolute;
	    top: 50%;
	    left: 50%;
	    background: url("data:image/svg+xml;utf8,<svg width='24' height='24' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd'><path fill='%23D5352D' stroke='%23D5352D' stroke-width='2' d='M24 4.685l-16.327 17.315-7.673-9.054.761-.648 6.95 8.203 15.561-16.501.728.685z'/></svg>") no-repeat center center;
	    background-size: 60%;
	    height: 100%;
	    width: 100%;
	    transform: translate(-50%, -50%);
    }


    /* Hide the standard radio button */
    .custom-radio-input {
	    display: none;
    }

    /* Create a new custom radio button */
    .custom-radio-button {
	    display: inline-block;
	    height: 22px;
	    width: 22px;
	    margin: 5px;
	    background-color: #ffffff;
	    border: 1px solid #9599A0;
	    border-radius: 50%; /* Makes it circular */
	    position: relative;
    }

    /* Show the indicator (the dot) when checked */
    .custom-radio-input:checked ~ .custom-radio-button:after {
	    content: '';
	    display: block;
	    height: 10px;
	    width: 10px;
	    background-color: red;
	    position: absolute;
	    top: 50%;
	    left: 50%;
	    transform: translate(-50%, -50%); /* Centers the dot */
	    border-radius: 50%; /* Makes the indicator dot circular */
    }

    .col-gap {
	    margin-left: 10px;
	    margin-right: 10px;
    }

</style>
