@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog

@{
	ProductViewModel product = null;
	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	}
	else if (Pageview.Page.Item["DummyProduct"] != null && Pageview.IsVisualEditorMode)
	{
		var pageViewModel = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Pageview.Page);
		ProductListViewModel productList = pageViewModel.Item.GetValue("DummyProduct") != null ? pageViewModel.Item.GetValue("DummyProduct") as ProductListViewModel : new ProductListViewModel();

		if (productList?.Products is object)
		{
			product = productList.Products[0];
		}
	}

	bool isErpConnectionDown = !Dynamicweb.Core.Converter.ToBoolean(Dynamicweb.Context.Current.Items["IsWebServiceConnectionAvailable"]);
	double? currentStockLevel = product.StockLevel;
	bool hideStock = Model.Item.GetBoolean("HideStockState") || (Pageview.AreaSettings.GetBoolean("ErpDownHideStock") && isErpConnectionDown);

	string stockStateLabel = currentStockLevel > 0 ? (currentStockLevel < 5 ? Translate("Limited Qty") : Translate("In stock")) : Translate("Out of stock");
}
@if (product is object && product.ProductType == Dynamicweb.Ecommerce.Products.ProductType.Stock && !hideStock)
{
	if (!product.NeverOutOfstock)
	{
		<div class="card-product-head d-flex justify-content-end align-items-center position-relative">
			<div class="d-flex justify-content-center align-items-center rounded-bottom text-uppercase text-white card-product-badge sale-item">Sale</div>
			<div class="d-flex justify-content-between gap-1 align-items-center text-uppercase card-product-info">
				<span>@stockStateLabel</span>
				@if(currentStockLevel > 0 && currentStockLevel < 5)
				{
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none"><path fill="#F90" d="m14.056 10.133.801.481a.333.333 0 0 1 0 .572L9.01 14.694a.666.666 0 0 1-.686 0l-5.847-3.508a.333.333 0 0 1 0-.572l.801-.48 5.39 3.233 5.388-3.234Zm0-3.133.801.48a.333.333 0 0 1 0 .573l-6.19 3.714-6.19-3.714a.333.333 0 0 1 0-.572L3.278 7l5.39 3.233L14.055 7ZM9.01.872l5.847 3.509a.333.333 0 0 1 0 .571l-6.19 3.715-6.19-3.715a.333.333 0 0 1 0-.571L8.324.872a.667.667 0 0 1 .686 0Zm-.343 1.35L4.592 4.667l4.075 2.445 4.075-2.445-4.075-2.445Z"/></svg>
				}
				else if(currentStockLevel > 5)
				{
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none"><circle cx="8.001" cy="8" r="4.667" fill="#19C07A"/></svg>
				}
				else {
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none"><circle cx="8.334" cy="8" r="4.667" fill="#D5352D"/></svg>
				}				
			</div>
		</div>
	}

}
else if (Pageview.IsVisualEditorMode)
{
	<div class="alert alert-info">@Translate("Stock Indicator")</div>
}