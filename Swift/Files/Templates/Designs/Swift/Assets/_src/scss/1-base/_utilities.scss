@use 'sass:math';

// Custom font sizes

$custom-font-sizes: (
	7: .875rem,
	8: .75rem,
	9: .5rem
);

$font-sizes: map-merge($font-sizes, $custom-font-sizes);

$utilities: (
	"position": (
		property: position,
		responsive: true,
		values: static relative absolute fixed sticky
	),
	"font-size": (
		rfs: true,
		property: font-size,
		responsive: true,
		class: fs,
		values: $font-sizes
	),
	"opacity": (
		property: opacity,
		class: opacity,
		state: hover,
		values: (
			0: 0, 
			25: .25, 
			50: .5, 
			75: .75, 
			85: .85, 
			100: 1
		)
	),
	"rotate": (
		property: transform,
		class: rotate,
		values: (
			0: rotate(0), 
			90: rotate(90deg), 
			180: rotate(180deg), 
			270: rotate(270deg),
			360: rotate(360deg)
		)
	),
	"min-viewport-height": (
		responsive: true,
		property: min-height,
		class: min-vh,
		values: (100: 100vh, 75: 75vh, 50: 50vh, 25: 25vh)
	),
	"viewport-height": (
		responsive: true,
		property: height,
		class: vh,
		values: (100: 100vh, 75: 75vh, 50: 50vh, 25: 25vh)
	),
	"height": (
		responsive: true,
		property: height,
		class: h,
		values: (25: 25%, 50: 50%, 75: 75%, 100: 100%, auto: auto)
	),
	"width": (
		responsive: true,
		property: width,
		class: w,
		values: (25: 25%, 50: 50%, 75: 75%, 100: 100%, auto: auto)
	),
	"max-width": (
		responsive: true,
		property: max-width,
		class: mw,
		values: (100: 100%, 75ch: 75ch)
	),
	"overflow-y": (
		property: overflow-y,
		class: "overflow-y",
		values: auto hidden visible scroll
	),
	"overflow-x": (
		property: overflow-x,
		class: "overflow-x",
		values: auto hidden visible scroll
	),
	"grid": (
		responsive: true,
		property: --bs-columns,
		class: grid,
		values: (
			1: 1, 
			2: 2, 
			3: 3, 
			4: 4, 
			5: 5,
			6: 6,
			7: 7,
			8: 8,
			9: 9,
			10: 10,
			11: 11,
			12: 12
		)
	),
	"shadow-hover": (
		property: box-shadow,
		class: shadow,
		state: hover,
		values: (
			null: $box-shadow,
			sm: $box-shadow-sm,
			lg: $box-shadow-lg,
			none: none
		)
	),
	"shadow-transition": (
		property: transition,
		class: shadow-hover,
		values: (
			null: $transition-base
		)
	),
	"image-zoom": (
		property: transform,
		responsive: true,
		class: image-zoom,
		state: hover,
		values: (
			null: scale(1.01),
			1: scale(1.03),
			2: scale(1.05),
			3: scale(1.09),
			none: none
		)
	),
	"rounded": (
		property: border-radius,
		responsive: true,
		class: rounded,
		values: (
			null: $border-radius,
			0: 0,
			1: $border-radius-sm,
			2: $border-radius,
			3: $border-radius-lg,
			4: .5rem,
			5: .75rem,
			6: 1rem,
			circle: 50%,
			pill: $border-radius-pill
		)
	),
	"swiffy-gap": (
		responsive: true,
		class: swiffy-gap,
		property: --swiffy-slider-item-gap,
		values: (
			0: 0,
			1: math.div($spacer, 4),
			2: math.div($spacer, 2),
			3: $spacer * 1,
			4: $spacer * 2,
		)
	)
);

$positions: static, relative, absolute, fixed, sticky;

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		@each $value in $positions {
			.position#{$infix}-#{$value} {
				position: $value !important;
			}
		}
	}
}

// Create outlines on links and buttons to highten a11y

a:focus-visible,
button:focus-visible,
[ role="button" ]:focus-visible,
[ tabindex ]:focus-visible {
	outline: $ally-outline;
}

// If you want to specify your own outline on selected elements

.no-outline:focus-visible {
	outline: none;
}

// We need this to removes the default margin bottom set by the rich text editor

.mb-0-last-child > *:last-child {
	margin-bottom: 0 !important;
}

.text-decoration-underline-hover {

	&:hover,
	&:focus {
		text-decoration: underline !important;
	}
}

.lift {
	transform: translate3d(0, 0, 0);
	transition: $transition-base;

	&:focus,
	&:hover {
		transform: translate3d(0, -3px, 0);
		backface-visibility: hidden;
		will-change: transform;
	}

	&-lg {
		transition: $transition-base;

		&:focus,
		&:hover {
			transform: translate3d(0, -5px, 0);
			backface-visibility: hidden;
			will-change: transform;
		}
	}
}

.shadow-hover {
	backface-visibility: hidden;
	will-change: transform;
}

// Hide headers on scroll

body[ data-intersected="true" ] .js-hide-on-scroll {
	transform: translateY(-100%);
	opacity: 0;
	visibility: hidden;
	transition: transform .2s, opacity .2s, height .2s;
	padding: 0 !important;
	height: 0;
}

.js-hide-on-scroll {
	opacity: 1;
	transition: transform .2s, opacity .2s, height .2s;
	height: auto;
}
