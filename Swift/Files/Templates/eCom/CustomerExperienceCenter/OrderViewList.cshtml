@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@inherits ViewModelTemplate<OrderListViewModel>

@{
    string currentPageLink = "/Default.aspx?ID=" + Pageview.Page.ID;
}

<style>
.orders {
  width: 100%;
  border-collapse: collapse; 
}

.orders td, .orders th {
  border: 1px solid #ddd;
  padding: 8px;
}

.orders tr:nth-child(even){background-color: #f2f2f2;}

.orders tr:hover {background-color: #ddd;}

.orders th {
	padding-top: 12px;
	padding-bottom: 12px;
	text-align: left;
	color: white;
	background-color: #428bca; 
	font-weight: bold;  
}
</style>

@helper RenderPagination(string currentPageLink, OrderListViewModel model)
{
    <ul class="pagination">
        @{string pageHrefTemplate = string.Format("<a class=\"page-link\" href=\"{0}&PageNum={{0}}&PageSize={{1}}\">{{0}}</a>", currentPageLink);}
        @for (int i = 1; i <= model.PageCount; i++)
        {
            var css = i == model.CurrentPage
                ? "page-item active"
                : "page-item";
            <li class="@css">
                @string.Format(pageHrefTemplate, i, model.PageSize)
            </li>
        }
    </ul>
}

<h1>Order list</h1>

@RenderPagination(currentPageLink, Model)
@if (Model.Orders != null)
{
	<table class="orders">	
        <tr>
            <th>Order ID</th>
            <th>Created</th>
            <th>State ID</th>
            <th>Weight</th>
            <th>Volume</th>
            <th>Price</th>
            <th>Total discount</th>
        </tr>
	@foreach (var order in Model.Orders)
	{
		string orderLink = currentPageLink + "&amp;OrderId=" + order.Id;
        <tr>
            <td><a href="@orderLink">@order.Id</a></td>
            <td>@order.CreatedAt</td>
            <td>@order.StateId</td>
            <td>@order.Weight</td>
            <td>@order.Volume</td>
            <td>@order.Price.Price</td>
            <td>@order.TotalDiscount.Price</td>
        </tr>
	}
	</table>
    @RenderPagination(currentPageLink, Model)
}