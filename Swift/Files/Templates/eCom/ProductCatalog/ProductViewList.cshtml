@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@inherits ViewModelTemplate<ProductListViewModel>

@{
    string groupIdQueryParameter = string.IsNullOrEmpty(Dynamicweb.Context.Current.Request["GroupID"])
        ? string.Empty
        : "&amp;GroupID=" + Dynamicweb.Context.Current.Request["GroupID"];
    string currentPageLink = "/Default.aspx?ID=" + Pageview.Page.ID + groupIdQueryParameter;
}

@helper RenderPagination(string currentPageLink, ProductListViewModel model)
{
    <ul class="pagination">
        @{string pageHrefTemplate = string.Format("<a class=\"page-link\" href=\"{0}&PageNum={{0}}&PageSize={{1}}\">{{0}}</a>", currentPageLink);}
        @for (int i = 1; i <= model.PageCount; i++)
        {
            var css = i == model.CurrentPage
                ? "page-item active"
                : "page-item";
            <li class="@css">
                @string.Format(pageHrefTemplate, i, model.PageSize)
            </li>
        }
    </ul>
}

<h1>Product list</h1>

@RenderPagination(currentPageLink, Model)
@if (Model.Products != null)
{
    <div class="products">
        @foreach (var product in Model.Products)
        {
            string productLink = currentPageLink + "&amp;ProductID=" + product.Id;

            <h3>
                <a href="@productLink">@product.Name</a>
            </h3>
            <div>@product.Number</div>
            <small>@product.Id</small>
            <div>@product.VariantId</div>
            <div>@product.LanguageId</div>
            <div>@product.ShortDescription</div>
            if (product.Price != null)
            {
                <div>Price: @product.Price.Price</div>
            }
            @*<div class="variants">
				@foreach (var vc in product.Variants)
				{
					<div>@vc.Name</div>
				}
			</div>
			<div class="variantCombinations">
				@foreach (var vc in product.VariantCombinations)
				{
					<div>@vc.Name</div>
				}
			</div>*@
            <hr />
        }
    </div>
    @RenderPagination(currentPageLink, Model)
}
@*<div style="max-width: 100%; overflow:scroll;">
        @Model.ToJson()
    </div>*@

